{"version":3,"sources":["logIn/Login.js","actions/authActions.js","signUp/Signup.js","protectedRoute/ProtectedRoute.js","actions/testActions.js","dashboard/TestCard.js","dashboard/ResultCard.js","dashboard/Dashboard.js","Teacher/Dashboard/Classes.js","actions/classesActions.js","Teacher/Dashboard/AssignedTests.js","Teacher/Dashboard/Dashboard.js","attemptTest/SearchBox.js","attemptTest/TestList.js","attemptTest/SelectTest.js","actions/selectActions.js","attemptTest/AttemptTest.js","Roles/roles.js","navbar/LeftMenu.js","navbar/index.js","result/SearchBox.js","result/TestList.js","result/SelectTest.js","result/ResultWrapper.js","TestInstructions/TestInstruction.js","result/ShowResult.js","actions/attemptTestActions.js","testPreview/Counter.js","testPreview/LeftSide.js","testPreview/RightSide.js","testPreview/Footer.js","testPreview/HandleLiveTest.js","testPreview/TestPreview.js","testPreview/TestPreviewWrapper.js","profile/Profile.js","Teacher/CreateTest/Rules.js","Teacher/CreateTest/Questions.js","Teacher/CreateTest/RenderData.js","actions/TeacherActions.js","Teacher/CreateTest/CreateTest.js","Teacher/AssigenedTest/SearchBox.js","Teacher/AssigenedTest/TestList.js","Teacher/AssigenedTest/SelectTest.js","Teacher/AssigenedTest/AssignedTestsWrapper.js","Teacher/TestStatus/StudentStatus.js","Teacher/TestStatus/TestStatus.js","App/App.js","serviceWorker.js","reducers/authReducer.js","reducers/testReducer.js","reducers/selectReducer.js","reducers/attemptedTestReducer.js","reducers/classesReducer.js","reducers/teacherReducer.js","reducers/index.js","store/index.js","index.js"],"names":["connect","state","isAuthenticated","auth","isLoading","dispatch","sendLoginRequest","values","type","requestOptions","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","fetch","then","response","json","data","user","profileID","token","setItem","payload","catch","error","loginUser","props","history","useHistory","Typography","Title","useEffect","push","justify","align","className","xs","sm","md","lg","name","initialValues","remember","onFinish","onFinishFailed","errorInfo","console","log","Item","rules","required","message","placeholder","Password","style","textAlign","fontWeight","marginBottom","to","minWidth","loading","htmlType","accountCreated","sendSignUpRequest","errMess","signUpUser","sendUserAccountCreated","useState","showSelect","setShowSelect","Option","Select","notification","open","description","duration","defaultValue","onSelect","select","optionData","value","disabled","ProtectedRoute","Component","this","component","userInfo","pathname","React","testSubmitted","testID","fetchAttemptTests","tests","obj","fetchTests","isLoadingTest","test","classID","studentClassName","trimLength","length","slice","reverse","map","index","key","testName","Array","fill","item","i","Avatar","active","size","shape","Input","isLoadingAttemptedTest","attemptedTest","backgroundColor","gutter","xl","classesList","classesData","classes","fetchClasses","filteredDupicates","filter","v","a","findIndex","t","receiveClasses","individualClass","fetchTeacherTests","Dashboard","Search","SearchBox","searchTerm","setSearchTerm","handleListData","toLowerCase","onSearch","onChange","e","target","enterButton","TestList","setTests","searchTests","setSearchTests","searching","setSearching","selectRef","selectedData","handleSelectTest","classList","remove","currentTarget","add","includes","onClick","handleSelectedTest","selectedTest","testData","Roles","useBreakpoint","Grid","signOut","setisAuthenticated","location","useLocation","role","homeRoute","testRoute","resultRoute","signOutRoute","profileRoute","createTestRoute","assignedTestRoute","display","mode","removeItem","Navbar","current","visible","showDrawer","setState","onClose","title","placement","closable","replace","selectedTestData","testRules","confirm","Modal","outOfMarks","questions","minutes","category","attempted","_id","rule","src","alt","icon","ExclamationCircleOutlined","content","onOk","onCancel","selectedTestResultData","marks","rightAnswers","submitMinutes","totalMarks","totalAttempt","date","testInfo","correct","wrong","submitDate","Date","toLocaleDateString","percent","Math","floor","status","width","height","chartType","loader","options","pieHole","rootProps","updateTimeSpentByStudent","completed","totalTime","updatingAttemptedMinutes","parseInt","subtractTime","attemptedTime","abs","testStatus","time","Counter","totalMinutes","parse","remainingTime","rM","count","hideDay","onEnd","handleCounter","LeftSide","changeBg","activatedQue","answered","footerClicked","accordionContent","flagQuestion","setFlag","questionsData","undefined","activateQue","leftActiveQue","nextProps","nextState","flag","footerClick","flagClicked","question","ref","handleQuestionClick","handleClick","RightSide","handleClearResponse","newSelectedAnswers","selectedAnswers","blankClearAttempt","questionAnswered","changeActivatedQueInChild","changeActivatedQue","changeParentActivatedQue","submitTest","dataToSubmit","userAnswers","answers","firstName","lastName","unanswered","element","changeIndex","questionIndex","apply","onRef","radioStyle","lineHeight","Group","option","CloseOutlined","postedData","submitBy","Footer","handleNext","handleFooterButtons","handleSubmitTest","HandleLiveTest","changeActivatedQueFromFooter","child","triggerFlag","submitTestOnCounterEnd","buttonClicked","updatedUserAnswers","totalAnswered","totalPending","changed","totalScore","totalFlagged","counterEnd","click","updateTimer","TestPreview","intervalId","timer","clickChild","loadData","intervalID","setInterval","bind","clearInterval","tM","userAttemptedTime","isSelected","Object","keys","Profile","submitForm","isVerified","email","phone","section","verfied","notVerfied","xxl","margin","readonly","userisVerified","Rules","setRule","submitInput","addRule","questionDescripiton","setQuestionDescripiton","opiton1","setOption1","opiton2","setOption2","opiton3","setOption3","opiton4","setOption4","answer","setAnswer","TextArea","questionData","addQuestion","min","max","RenderData","ruleData","clickedRule","fontSize","CreateTest","sendData","teacherId","teacherID","testCreated","handleSelect","handleDeleteRule","Removeindex","handleDeleteQuestion","openNotification","testCreatedFalse","teacher","assignedTests","fetchAssignedTests","StudentStatus","student","toUpperCase","selectedAssignedTestData","students","selectedTestName","selectedAssignedTestName","setCount","window","addEventListener","preventDefault","success","exact","path","Login","Signup","TeacherDashboard","StudentDashboard","AttemptTest","Result","IndividualResult","TestInstruction","TestPreviewWrapper","AssignedTestsWrapper","TestStatus","Boolean","hostname","match","initialState","isLoggingIn","isSigningUp","isLoggingOut","isVerifying","loginError","signupError","logoutError","sendPassResetSuccess","sendPassResetError","isFetching","fetchingError","isFetched","testSubmitError","isFetchingError","initializeTimer","isFetchError","combineReducers","action","verifyingError","fetchError","isfetched","allEnhancers","compose","applyMiddleware","thunk","store","createStore","reducer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.74c18f03.chunk.js","sourcesContent":["import { Form, Input, Button } from \"antd\";\nimport React, { useEffect } from \"react\";\nimport { Row, Col, Typography } from \"antd\";\nimport \"./Login.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { loginUser } from \"../actions/authActions\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nfunction Login(props) {\n  const history = useHistory();\n  const { Title } = Typography;\n  const { isLoading } = props;\n\n  const tailLayout = {\n    wrapperCol: {\n      offset: 8,\n      span: 16,\n    },\n  };\n\n  useEffect(() => {\n    if (props.isAuthenticated) {\n      history.push(\"/\");\n    }\n  }, [props]);\n\n  const submitForm = (values) => {\n    props.sendLoginRequest(values);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n  return (\n    <>\n      <Row justify=\"center\" align=\"middle\" className=\"hero\">\n        <Col xs={22} sm={22} md={6} lg={6} className=\"signin__container\">\n          <p className=\"sub-title\">🎓 EMS</p>\n\n          <Form\n            name=\"basic\"\n            initialValues={{\n              remember: true,\n            }}\n            onFinish={submitForm}\n            onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              name=\"email\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your email!\",\n                },\n              ]}\n            >\n              <Input placeholder=\"Email\" />\n            </Form.Item>\n\n            <Form.Item\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your password!\",\n                },\n              ]}\n            >\n              <Input.Password placeholder=\"Password\" />\n            </Form.Item>\n            <div\n              className=\"link\"\n              style={{\n                textAlign: \"center\",\n                fontWeight: 500,\n                marginBottom: \"15px\",\n              }}\n            >\n              <Link to=\"/signup\">New here? Create your account.</Link>\n            </div>\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                className=\"sign__in\"\n                style={{ minWidth: \"44px\" }}\n                loading={isLoading}\n                htmlType=\"submit\"\n              >\n                {!isLoading ? \"Sign In\" : \"Logging In\"}\n              </Button>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n    isLoading: state.auth.isLoading,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendLoginRequest: (values) => dispatch(loginUser(values)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","export const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\n\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\n\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\n\nexport const VERIFY_REQUEST = \"VERIFY_REQUEST\";\nexport const VERIFY_SUCCESS = \"VERIFY_SUCCESS\";\n\nexport const SEND_PASS_RESET = \"SEND_PASS_RESET\";\nexport const SEND_PASS_RESET_ERROR = \"SEND_PASS_RESET_ERROR\";\nexport const SEND_PASS_RESET_SUCCESS = \"SEND_PASS_RESET_SUCCESS\";\n\nexport const USER_ACCOUNT_CREATED = \"USER_ACCOUNT_CREATED\";\n\nconst requestLogin = () => {\n  return {\n    type: LOGIN_REQUEST,\n  };\n};\n\nconst receiveLogin = (user, profileID) => {\n  return {\n    type: LOGIN_SUCCESS,\n    user,\n    profileID,\n  };\n};\n\nconst loginError = () => {\n  return {\n    type: LOGIN_FAILURE,\n  };\n};\n\nconst requestsignup = () => {\n  return {\n    type: SIGN_UP_REQUEST,\n  };\n};\n\nconst receiveSignup = (user) => {\n  return {\n    type: SIGN_UP_SUCCESS,\n    user,\n  };\n};\n\nconst signupError = (errMess) => {\n  return {\n    type: SIGN_UP_FAILURE,\n    errMess,\n  };\n};\n\nconst requestLogout = () => {\n  return {\n    type: LOGOUT_REQUEST,\n  };\n};\n\nconst receiveLogout = () => {\n  return {\n    type: LOGOUT_SUCCESS,\n  };\n};\n\nconst logoutError = () => {\n  return {\n    type: LOGOUT_FAILURE,\n  };\n};\n\nconst verifyRequest = () => {\n  return {\n    type: VERIFY_REQUEST,\n  };\n};\n\nconst verifySuccess = () => {\n  return {\n    type: VERIFY_SUCCESS,\n  };\n};\n\nconst sendingPassReset = () => {\n  return {\n    type: SEND_PASS_RESET,\n  };\n};\n\nconst sendPassResetError = (errMess) => {\n  return {\n    type: SEND_PASS_RESET_ERROR,\n    errMess,\n  };\n};\n\nconst sendPassResetSuccess = () => {\n  return {\n    type: SEND_PASS_RESET_SUCCESS,\n  };\n};\n\nconst userAccountCreated = () => {\n  return {\n    type: USER_ACCOUNT_CREATED,\n  };\n};\n\nexport const loginUser = (values) => (dispatch) => {\n  dispatch(requestLogin());\n\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"token\"),\n    },\n\n    body: JSON.stringify(values),\n  };\n\n  fetch(\"/user/login\", requestOptions)\n    .then((response) => response.json())\n    .then((data) => {\n      if (data.token) {\n        localStorage.setItem(\"token\", `Bearer ${data.token}`);\n        localStorage.setItem(\"userProfile\", JSON.stringify(data.payload.user));\n        localStorage.setItem(\"profileID\", data.payload.profileID);\n        dispatch(receiveLogin(data.payload.user, data.payload.profileID));\n        // history.push(\"/studentHome\");\n      }\n    })\n    .catch((error) => {\n      //Do something with the error if you want!\n      dispatch(loginError());\n    });\n};\n\nexport const signUpUser = (values) => (dispatch) => {\n  dispatch(requestsignup());\n\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(values),\n  };\n  //console.log(\"Success:\", values);\n  fetch(\"/user/signup\", requestOptions)\n    .then((response) => response.json())\n    .then((data) => {\n      if (data.token) {\n        // localStorage.setItem(\"token\", `Bearer ${data.token}`);\n        // localStorage.setItem('userProfile', JSON.stringify(data.payload.user));\n        // localStorage.setItem('profileID', data.payload.profileID);\n        dispatch(receiveSignup(data.user));\n        //history.push(\"/studentHome\");\n      }\n    })\n    .catch((error) => {\n      //Do something with the error if you want!\n      console.log(error)\n      dispatch(signupError());\n    });\n};\n\nexport const accountCreated = () => (dispatch) => {\n  dispatch(userAccountCreated());\n};\n\n// export const signupUser = (displayName, email, password, password2) => dispatch => {\n//   dispatch(requestsignup());\n//   //verifying password and name.\n//   if(displayName.length < 3){\n//     return dispatch(signupError(\"Name must have atleast 3 characters.\"));\n//   }\n\n//   if(displayName.length > 50){\n//     return dispatch(signupError(\"Name must have atmost 50 characters.\"));\n//   }\n\n//   if(!/^[a-zA-Z ]*$/.test(displayName)){\n//     return dispatch(signupError(\"Name must contain only alphabets.\"));\n//   }\n\n//   if(password !== password2){\n//     return dispatch(signupError(\"Passwords do not match\"));\n//   }\n\n// };\n\nexport const logoutUser = () => (dispatch) => {\n  dispatch(requestLogout());\n  dispatch(receiveLogout());\n};\n\n// export const verifyAuth = () => dispatch => {\n//   dispatch(verifyRequest());\n//   myFirebase.auth().onAuthStateChanged(user => {\n//     if (user !== null) {\n//       dispatch(receiveLogin(user));\n//     }\n//     dispatch(verifySuccess());\n//   });\n// };\n\n// export const sendPasswordResetLink = (email) => dispatch => {\n//   dispatch(sendingPassReset());\n//   myFirebase.auth().sendPasswordResetEmail(email)\n//   .then(()=>{\n//     dispatch(sendPassResetSuccess());\n//   })\n//   .catch(error=>{\n//     console.error(error);\n//     switch(error.code){\n//       case 'auth/invalid-email':\n//         dispatch(sendPassResetError(\"Invalid email address.\"));\n//         break;\n//       case 'auth/user-not-found':\n//         dispatch(sendPassResetError(\"User not found with the given email address.\"));\n//         break;\n//       default:\n//         dispatch(sendPassResetError(\"Failed to send password reset email.\"));\n//     }\n//   })\n// }\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Row,\n  Col,\n  Typography,\n  Form,\n  Input,\n  Button,\n  Select,\n  notification,\n} from \"antd\";\nimport \"./Signup.css\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { signUpUser, accountCreated } from \"../actions/authActions\";\nimport { Link } from \"react-router-dom\";\n\nfunction Signup(props) {\n  const [showSelect, setShowSelect] = useState(false);\n  const history = useHistory();\n  const { Option } = Select;\n  const { isLoading } = props;\n\n  const submitForm = (values) => {\n    props.sendSignUpRequest(values);\n    console.log(values);\n  };\n\n  const openNotification = () => {\n    const args = {\n      message: \"Account Created\",\n      description:\n        \"Congratulations, Now you are part of our family. Please login to continue.\",\n      duration: 3,\n    };\n    notification.open(args);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n  useEffect(() => {\n    if (props.accountCreated) {\n      openNotification();\n      props.sendUserAccountCreated();\n    }\n  }, [props]);\n\n  const handleSelect = (select, optionData) => {\n    console.log(optionData);\n    if (optionData.value === \"teacher\") {\n      setShowSelect(true);\n    } else {\n      setShowSelect(false);\n    }\n  };\n  return (\n    <>\n      <Row justify=\"center\" align=\"middle\" className=\"hero\">\n        <Col xs={22} sm={22} md={8} lg={8} className=\"signup__container\">\n          <p className=\"sub-title__signup\">🎓 EMS</p>\n          <Form\n            name=\"basic\"\n            initialValues={{\n              remember: true,\n            }}\n            onFinish={submitForm}\n            onFinishFailed={onFinishFailed}\n          >\n            <div className=\"element__wrapper\">\n              <Form.Item\n                name=\"firstName\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your First Name!\",\n                  },\n                ]}\n              >\n                <Input placeholder=\"First Name\" />\n              </Form.Item>\n              <Form.Item\n                name=\"lastName\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your Last Name!\",\n                  },\n                ]}\n              >\n                <Input placeholder=\"Last Name\" />\n              </Form.Item>\n            </div>\n            <Form.Item\n              name=\"email\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your email!\",\n                },\n              ]}\n            >\n              <Input placeholder=\"abcd@gmail.com\" />\n            </Form.Item>\n            <Form.Item\n              name=\"password\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your password!\",\n                },\n              ]}\n            >\n              <Input.Password placeholder=\"Password\" />\n            </Form.Item>\n            <Form.Item\n              name=\"phone\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your Phone Number!\",\n                },\n              ]}\n            >\n              <Input type=\"tel\" placeholder=\"7275XXXXXX\" />\n            </Form.Item>\n\n            <div className=\"element__wrapper\">\n              <Form.Item\n                name=\"role\"\n                rules={[\n                  {\n                    message: \"Please input your role!\",\n                  },\n                ]}\n              >\n                <Select defaultValue=\"Role\" onSelect={handleSelect}>\n                  <Option value=\"student\">Student</Option>\n                  <Option value=\"teacher\">Teacher</Option>\n                </Select>\n              </Form.Item>\n\n              <Form.Item\n                name=\"section\"\n                rules={[\n                  {\n                    message: \"Please input your section!\",\n                  },\n                ]}\n              >\n                <Select defaultValue=\"Section\" disabled={showSelect}>\n                  <Option value=\"A\">Batch-1</Option>\n                  <Option value=\"B\">Batch-2</Option>\n                  <Option value=\"C\">Batch-3</Option>\n                  <Option value=\"D\">Batch-4</Option>\n                </Select>\n              </Form.Item>\n\n              <Form.Item\n                name=\"className\"\n                rules={[\n                  {\n                    message: \"Please input your email!\",\n                  },\n                ]}\n              >\n                <Select defaultValue=\"Class\" disabled={showSelect}>\n                  <Option value=\"Intermediate\">Intermediate</Option>\n                  <Option value=\"Diplamo\">Diplamo</Option>\n                  <Option value=\"B.Tech\">B.Tech</Option>\n                  {/* <Option value=\"XI\">XI</Option>\n                    <Option value=\"XII\">XII</Option> */}\n                </Select>\n              </Form.Item>\n            </div>\n            <div\n              className=\"link\"\n              style={{\n                textAlign: \"center\",\n                fontWeight: 500,\n                marginBottom: \"15px\",\n              }}\n            >\n              <Link to=\"/sigin\">Already have account? Signin</Link>\n            </div>\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                className=\"sign__up\"\n                htmlType=\"submit\"\n                loading={isLoading}\n              >\n                {!isLoading ? \"Sign Up\" : \"Creating Account\"}\n              </Button>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n    isLoading: state.auth.isLoading,\n    accountCreated: state.auth.accountCreated,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendSignUpRequest: (values) => dispatch(signUpUser(values)),\n    sendUserAccountCreated: () => dispatch(accountCreated()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass ProtectedRoute extends React.Component {\n  render() {\n    const Component = this.props.component;\n    return this.props.isAuthenticated ? (\n      <Component userInfo={this.props.userInfo} />\n    ) : (\n      <Redirect to={{ pathname: \"/signin\" }} />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n    userInfo: state.auth.user,\n  };\n};\nexport default connect(mapStateToProps, null)(ProtectedRoute);\n","import { logoutUser } from \"./authActions\";\nexport const FETCH_TEST_REQUEST = \"FETCH_TEST_REQUEST\";\nexport const FETCH_TEST_SUCCESS = \"FETCH_TEST_SUCCESS\";\nexport const FETCH_ATTEMPT_TEST_SUCCESS = \"FETCH_ATTEMPT_TEST_SUCCESS\";\nexport const FETCH_TEST_FAILURE = \"FETCH_TEST_FAILURE\";\nexport const SUBMIT_TEST_FAILURE = \"SUBMIT_TEST_FAILURE\";\nexport const SUBMIT_TEST_SUCCESS = \"SUBMIT_TEST_SUCCESS\";\n\n// Teacher action types\nexport const FETCH_TEACHER_TEST_REQUEST = \"FETCH_TEACHER_TEST_REQUEST\";\nexport const FETCH_TEACHER_TEST_SUCCESS = \"FETCH_TEACHER_TEST_SUCCESS\";\nexport const FETCH_TEACHER_TEST_FAILURE = \"FETCH_TEACHER_TEST_FAILURE\";\n\nconst requestTests = () => {\n  return {\n    type: FETCH_TEST_REQUEST,\n  };\n};\n\nconst receiveTests = (tests) => {\n  return {\n    type: FETCH_TEST_SUCCESS,\n    tests,\n  };\n};\n\nconst testsError = (errorData) => {\n  return {\n    type: FETCH_TEST_FAILURE,\n  };\n};\nconst requestTeacherTests = () => {\n  return {\n    type: FETCH_TEACHER_TEST_REQUEST,\n  };\n};\n\nconst receiveTeacherTests = (tests) => {\n  return {\n    type: FETCH_TEACHER_TEST_SUCCESS,\n    tests,\n  };\n};\n\nconst testsTeacherError = () => {\n  return {\n    type: FETCH_TEACHER_TEST_FAILURE,\n  };\n};\nconst testSubmitError = () => {\n  return {\n    type: SUBMIT_TEST_FAILURE,\n  };\n};\nconst testSubmitted = (testID) => {\n  return {\n    type: SUBMIT_TEST_SUCCESS,\n    testID: testID,\n  };\n};\n\nconst receiveAttemptTests = (tests) => {\n  return {\n    type: FETCH_ATTEMPT_TEST_SUCCESS,\n    tests,\n  };\n};\n\nexport const fetchAttemptTests = (profileID) => async (dispatch) => {\n  dispatch(requestTests());\n\n  const requestOptions = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"token\"),\n    },\n  };\n\n  await fetch(`/student/attempt-tests/${profileID}`, requestOptions)\n    .then((response) => response.json())\n    .then((data) => {\n      if (data) {\n        if (data?.error?.name === \"TokenExpiredError\") {\n          dispatch(logoutUser());\n        } else {\n          dispatch(receiveAttemptTests(data.obj));\n        }\n      }\n    })\n    .catch((error) => {\n      //Do something with the error if you want!\n      console.log(error);\n      dispatch(testsError());\n    });\n};\n\nexport const fetchTests = (className) => async (dispatch) => {\n  dispatch(requestTests());\n\n  const requestOptions = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"token\"),\n    },\n  };\n\n  await fetch(`/student/tests/${className}`, requestOptions)\n    .then((response) => response.json())\n    .then((data) => {\n      if (data?.error?.name === \"TokenExpiredError\") {\n        dispatch(logoutUser());\n      } else {\n        dispatch(receiveTests(data.obj));\n      }\n    })\n    .catch((error) => {\n      //Do something with the error if you want!\n      console.log(error);\n    });\n};\n\nexport const submitTest = (data) => async (dispatch) => {\n  // dispatch(requestTests());\n  const {\n    testID,\n    correct,\n    unanswered,\n    totalMarks,\n    profileID,\n    testName,\n    firstName,\n    lastName,\n    wrong,\n  } = data;\n  const testData = JSON.parse(localStorage.getItem(testID));\n  let submitMinutes = testData.rM;\n  const submitBy = [\n    {\n      correct,\n      unanswered,\n      totalMarks,\n      profileID,\n      testName,\n      firstName,\n      lastName,\n      wrong,\n      submitMinutes,\n    },\n  ];\n\n  const postedData = {\n    submitBy,\n    testID,\n    testName,\n  };\n\n  const requestOptions = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"token\"),\n    },\n    body: JSON.stringify(postedData),\n  };\n\n  await fetch(`/student/submit-test/${testID}`, requestOptions)\n    .then((response) => response.json())\n    .then((data) => {\n      if (data) {\n        if (data?.error?.name === \"TokenExpiredError\") {\n          dispatch(logoutUser());\n        } else {\n          dispatch(testSubmitted(testID));\n        }\n      }\n    })\n    .catch((error) => {\n      //Do something with the error if you want!\n      console.log(error);\n      dispatch(testSubmitError());\n    });\n};\n\n/* Teacher Actions*/\n\nexport const fetchTeacherTests = (profileID) => async (dispatch) => {\n  dispatch(requestTeacherTests());\n\n  const requestOptions = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"token\"),\n    },\n  };\n\n  await fetch(`/teacher/tests/${profileID}`, requestOptions)\n    .then((response) => response.json())\n    .then((data) => {\n      if (data) {\n        if (data?.error?.name === \"TokenExpiredError\") {\n          dispatch(logoutUser());\n        } else {\n          dispatch(receiveTeacherTests(data.obj));\n        }\n      }\n    })\n    .catch((error) => {\n      //Do something with the error if you want!\n      console.log(error);\n      dispatch(testsTeacherError());\n    });\n};\n","import React, { useEffect } from \"react\";\nimport \"./TestCard.css\";\nimport { Link } from \"react-router-dom\";\nimport { HiOutlineClipboardList, HiClipboardCopy } from \"react-icons/hi\";\nimport { fetchTests } from \"../actions/testActions\";\nimport { connect } from \"react-redux\";\nimport { Skeleton } from \"antd\";\n\nfunction TestCard(props) {\n  let { tests, isLoading, studentClassName, trimLength } = props;\n  if (tests)\n    tests =\n      tests.length > trimLength ? tests.slice(-trimLength).reverse() : tests;\n\n  useEffect(() => {\n    props.fetchTests(studentClassName);\n  }, []);\n\n  return (\n    <>\n      <div className=\"left__header red__header\">\n        <p className=\"left__header__text\">\n          {<HiOutlineClipboardList />}Today's Test\n        </p>\n      </div>\n      <div className=\"left__body\">\n        {!isLoading && tests ? (\n          <ul className=\"left__body__list__ul\">\n            {tests.map((test, index) => (\n              <Link to=\"/attempt-test\" key={index}>\n                <li className=\"left__body__test\">\n                  <div className=\"test__index\">\n                    <p className=\"index__box red__index\">{index + 1}</p>\n                  </div>\n                  <div className=\"test__name \"> {test.testName}</div>\n                  <div className=\"test__icon\">\n                    <HiClipboardCopy />\n                  </div>\n                </li>\n              </Link>\n            ))}\n          </ul>\n        ) : (\n          <div className=\"skeleton\">\n            {Array(trimLength)\n              .fill()\n              .map((item, i) => (\n                <div className=\"single-skeleton\" key={i}>\n                  <Skeleton.Avatar\n                    className=\"avatar-skelton\"\n                    active={true}\n                    size=\"default\"\n                    shape=\"square\"\n                  />\n                  <Skeleton.Input\n                    className=\"input-skelton\"\n                    active={true}\n                    size=\"default\"\n                  />\n                </div>\n              ))}\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoading: state.tests.isLoadingTest,\n    tests: state.tests.test,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchTests: (classID) => dispatch(fetchTests(classID)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TestCard);\n","import React, { useEffect } from \"react\";\nimport \"./TestCard.css\";\nimport { HiOutlineClipboardList, HiClipboardCopy } from \"react-icons/hi\";\nimport { fetchAttemptTests } from \"../actions/testActions\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Skeleton } from \"antd\";\n\nfunction ResultCard(props) {\n  let { tests, isLoading, profileID, trimLength } = props;\n  if (tests)\n    tests =\n      tests.length > trimLength ? tests.slice(-trimLength).reverse() : tests;\n\n  useEffect(() => {\n    props.fetchTests(profileID);\n    console.log(\"fired\");\n  }, []);\n\n  return (\n    <>\n      <div className=\"left__header\">\n        <p className=\"left__header__text\">\n          {<HiOutlineClipboardList />}Recently Attempted Tests\n        </p>\n      </div>\n      <div className=\"left__body\">\n        {!isLoading && tests ? (\n          <ul className=\"left__body__list__ul\">\n            {tests.map((test, index) => (\n              <Link to=\"/result\" key={index}>\n                <li className=\"left__body__test\">\n                  <div className=\"test__index\">\n                    <p\n                      className=\"index__box \"\n                      style={{ backgroundColor: \"#1e90ff\" }}\n                    >\n                      {index + 1}\n                    </p>\n                  </div>\n                  <div className=\"test__name\"> {test.testName}</div>\n                  <div className=\"test__icon\">\n                    <HiClipboardCopy />\n                  </div>\n                </li>\n              </Link>\n            ))}\n          </ul>\n        ) : (\n          <div className=\"skeleton\">\n            {Array(trimLength)\n              .fill()\n              .map((item, i) => (\n                <div className=\"single-skeleton\" key={i}>\n                  <Skeleton.Avatar\n                    className=\"avatar-skelton\"\n                    active={true}\n                    size=\"default\"\n                    shape=\"square\"\n                  />\n                  <Skeleton.Input\n                    className=\"input-skelton\"\n                    active={true}\n                    size=\"default\"\n                  />\n                </div>\n              ))}\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoading: state.tests.isLoadingAttemptedTest,\n    tests: state.tests.attemptedTest,\n    profileID: state.auth.profileID,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchTests: (profileID) => dispatch(fetchAttemptTests(profileID)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultCard);\n","import React, { useState } from \"react\";\nimport { Row, Col } from \"antd\";\nimport { connect } from \"react-redux\";\nimport TestCard from \"./TestCard\";\nimport ResultCard from \"./ResultCard\";\nimport \"./Dashboard.css\";\n\nfunction Dashboard(props) {\n  const { studentClassName, profileID, userInfo } = props;\n  const trimLength = 8;\n\n  // console.log(userInfo);\n\n  return (\n    <>\n      <div className={\"container dashboard\"}>\n        <Row gutter={[48, 10]} justify=\"center\">\n          <Col className=\"gutter-row\" xs={24} sm={24} md={9} xl={9}>\n            <TestCard\n              studentClassName={studentClassName}\n              trimLength={trimLength}\n            />\n          </Col>\n          <Col className=\"gutter-row\" xs={24} sm={24} md={9} xl={9}>\n            <ResultCard trimLength={trimLength} />\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    studentClassName: state.auth.user ? state.auth.user.className : null,\n    profileID: state.auth.user ? state.auth.user.profileID : null,\n  };\n};\n\nexport default connect(mapStateToProps, null)(Dashboard);\n","import React, { useEffect } from \"react\";\nimport \"./index.css\";\nimport { Link } from \"react-router-dom\";\nimport { HiOutlineClipboardList, HiClipboardCopy } from \"react-icons/hi\";\nimport { fetchClasses } from \"../../actions/classesActions\";\nimport { connect } from \"react-redux\";\nimport { Skeleton } from \"antd\";\n\nfunction Classes(props) {\n  let { classesList, isLoading, studentClassName, trimLength, classes } = props;\n  if (classesList)\n    classesList =\n      classesList.length > trimLength\n        ? classesList.slice(-trimLength).reverse()\n        : classesList;\n\n  useEffect(() => {\n    props.fetchClasses();\n  }, []);\n  console.log(props);\n\n  return (\n    <>\n      <div className=\"left__header red__header\">\n        <p className=\"left__header__text\">\n          {<HiOutlineClipboardList />}Recent Registered Classes\n        </p>\n      </div>\n      <div className=\"left__body\">\n        {!isLoading && classesList ? (\n          <ul className=\"left__body__list__ul\">\n            {classesList.map((individualClass, index) => (\n              <Link to=\"/attempt-test\" key={index}>\n                <li className=\"left__body__test\">\n                  <div className=\"test__index\">\n                    <p className=\"index__box red__index\">{index + 1}</p>\n                  </div>\n                  <div className=\"test__name \">\n                    {\" \"}\n                    Class - {individualClass.className}\n                  </div>\n                  <div className=\"test__icon\">\n                    <HiClipboardCopy />\n                  </div>\n                </li>\n              </Link>\n            ))}\n          </ul>\n        ) : (\n          <div className=\"skeleton\">\n            {Array(trimLength)\n              .fill()\n              .map((item, i) => (\n                <div className=\"single-skeleton\" key={i}>\n                  <Skeleton.Avatar\n                    className=\"avatar-skelton\"\n                    active={true}\n                    size=\"default\"\n                    shape=\"square\"\n                  />\n                  <Skeleton.Input\n                    className=\"input-skelton\"\n                    active={true}\n                    size=\"default\"\n                  />\n                </div>\n              ))}\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoading: state.tests.isLoadingTest,\n    tests: state.tests.test,\n    classesList: state.classesData.classes,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchClasses: () => dispatch(fetchClasses()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Classes);\n","import { logoutUser } from \"./authActions\";\nexport const FETCH_CLASSES_REQUEST = \"FETCH_CLASSES_REQUEST\";\nexport const FETCH_CLASSES_SUCCESS = \"FETCH_CLASSES_SUCCESS\";\nexport const FETCH_CLASSES_FAILURE = \"FETCH_CLASSES_FAILURE\";\n\nconst requestClasses = () => {\n  return {\n    type: FETCH_CLASSES_REQUEST,\n  };\n};\n\nconst receiveClasses = (data) => {\n  return {\n    type: FETCH_CLASSES_SUCCESS,\n    data,\n  };\n};\n\nconst ClassesError = () => {\n  return {\n    type: FETCH_CLASSES_FAILURE,\n  };\n};\n\nexport const fetchClasses = (values) => (dispatch) => {\n  dispatch(requestClasses());\n\n  const requestOptions = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"token\"),\n    },\n  };\n  fetch(\"/teacher/classes\", requestOptions)\n    .then((response) => response.json())\n    .then((data) => {\n      if (data?.error?.name === \"TokenExpiredError\") {\n        dispatch(logoutUser());\n      } else {\n        const filteredDupicates = data.obj.filter(\n          (v, i, a) => a.findIndex((t) => t.className === v.className) === i\n        );\n        dispatch(receiveClasses(filteredDupicates));\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n      //Do something with the error if you want!\n      dispatch(ClassesError());\n    });\n};\n","import React, { useEffect } from \"react\";\nimport { HiOutlineClipboardList, HiClipboardCopy } from \"react-icons/hi\";\nimport { fetchTeacherTests } from \"../../actions/testActions\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Skeleton } from \"antd\";\nimport \"./index.css\";\n\nfunction AssignedTests(props) {\n  let { tests, isLoading, profileID, trimLength } = props;\n  if (tests)\n    tests =\n      tests.length > trimLength ? tests.slice(-trimLength).reverse() : tests;\n\n  useEffect(() => {\n    props.fetchTests(profileID);\n    console.log(\"fired\");\n  }, []);\n\n  return (\n    <>\n      <div className=\"left__teacher__header\">\n        <p className=\"left__teacher__header__text\">\n          {<HiOutlineClipboardList />}Recently Assigned Tests\n        </p>\n      </div>\n      <div className=\"left__body\">\n        {!isLoading && tests ? (\n          <ul className=\"left__body__list__ul\">\n            {tests.map((test, index) => (\n              <Link to=\"/assigned-test\" key={index}>\n                <li className=\"left__body__test\">\n                  <div className=\"test__index\">\n                    <p className=\"index__box index__box__teacher \">\n                      {index + 1}\n                    </p>\n                  </div>\n                  <div className=\"test__name\">\n                    {\" \"}\n                    {test.testName} - Class {test.className}\n                  </div>\n                  <div className=\"test__icon\">\n                    <HiClipboardCopy />\n                  </div>\n                </li>\n              </Link>\n            ))}\n          </ul>\n        ) : (\n          <div className=\"skeleton\">\n            {Array(trimLength)\n              .fill()\n              .map((item, i) => (\n                <div className=\"single-skeleton\" key={i}>\n                  <Skeleton.Avatar\n                    className=\"avatar-skelton\"\n                    active={true}\n                    size=\"default\"\n                    shape=\"square\"\n                  />\n                  <Skeleton.Input\n                    className=\"input-skelton\"\n                    active={true}\n                    size=\"default\"\n                  />\n                </div>\n              ))}\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoading: state.tests.isLoadingTest,\n    tests: state.tests.test,\n    profileID: state.auth.profileID,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchTests: (profileID) => dispatch(fetchTeacherTests(profileID)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AssignedTests);\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\nimport Classes from \"./Classes\";\nimport AssignedTests from \"./AssignedTests\";\nimport \"./Dashboard.css\";\n\nfunction Dashboard(props) {\n  const trimLength = 8;\n  // console.log(userInfo);\n\n  return (\n    <>\n      <div className=\"container dashboard\">\n        <Row gutter={[48, 10]} justify=\"center\">\n          <Col className=\"gutter-row\" xs={24} sm={24} md={9} xl={9}>\n            <AssignedTests trimLength={trimLength} />\n          </Col>\n          <Col className=\"gutter-row\" xs={24} sm={24} md={9} xl={9}>\n            <Classes trimLength={trimLength} />\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default Dashboard;\n","import React, { useState, useEffect } from \"react\";\nimport { Input } from \"antd\";\nimport { AudioOutlined } from '@ant-design/icons';\nconst { Search } = Input;\n\nexport default function SearchBox(props) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    props.handleListData(searchTerm.toLowerCase());\n  }, [searchTerm]);\n\n  const handleSearchChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n  const onSearch = (value) => {\n    console.log(value);\n  };\n\n  return (\n    <>\n      <div className=\"search__input\">\n        <Search\n          placeholder=\"input search text\"\n          onSearch={onSearch}\n          onChange={handleSearchChange}\n          enterButton\n        />\n      </div>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Button } from \"antd\";\nimport SearchBox from \"./SearchBox\";\nimport { useHistory } from \"react-router-dom\";\nimport { Skeleton } from \"antd\";\n\nexport default function TestList(props) {\n  const history = useHistory();\n  const [tests, setTests] = useState([]);\n  const [searchTests, setSearchTests] = useState([]);\n  const [searching, setSearching] = useState(\"\");\n\n  useEffect(() => {\n    setTests(props.tests.reverse());\n  }, [props]);\n\n  const handleListData = (searchTerm) => {\n    if (searchTerm === \"\") setSearching(searchTerm);\n    else {\n      setSearching(true);\n      setSearchTests(\n        tests.filter((test) => test.testName.toLowerCase().includes(searchTerm))\n      );\n    }\n  };\n\n  let selectRef,\n    selectedData = {};\n\n  const handleButtonClick = () => {\n    props.handleSelectedTest(selectedData);\n    history.push(\"/test-instructions\");\n  };\n\n  const handleSelectTest = (e, index) => {\n    if (selectRef) {\n      selectRef.classList.remove(\"selected__test\");\n    }\n    selectRef = e.currentTarget;\n    e.currentTarget.classList.add(\"selected__test\");\n    selectedData = tests[index];\n\n    //console.log();\n  };\n\n  return (\n    <>\n      <div className=\"select__test__wrapper\">\n        <p className=\"test__wrapper__heading\">Available Test</p>\n        <div className=\"select__test__search__box\">\n          <p className=\"search__box__heading\">Search Test</p>\n          {<SearchBox handleListData={handleListData} />}\n          <div className=\"test__wrapper__body\">\n            <p className=\"test__wrapper__heading select__heading\">\n              Select Test\n            </p>\n            <div className=\"select__test__body\">\n              {tests && tests.length > 0 ? (\n                searching !== \"\" ? (\n                  searchTests.map((test, index) => (\n                    <div\n                      key={index}\n                      className={`test__wrapper`}\n                      onClick={(e) => {\n                        handleSelectTest(e, index);\n                      }}\n                    >\n                      <p className=\"select__test\" key={index}>\n                        {test.testName}\n                      </p>\n                      <div className=\"test__time\">\n                        <p className=\"time start\">Start: Oct 26 2020 12:14PM</p>\n                        <p className=\"time end\">End: Oct 29 2020 11:50PM</p>\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  tests.map((test, index) => (\n                    <div\n                      key={index}\n                      className={`test__wrapper`}\n                      onClick={(e) => {\n                        handleSelectTest(e, index);\n                      }}\n                    >\n                      <p className=\"select__test\" key={index}>\n                        {test.testName}\n                      </p>\n                      <div className=\"test__time\">\n                        <p className=\"time start\">Start: Oct 26 2020 12:14PM</p>\n                        <p className=\"time end\">End: Oct 29 2020 11:50PM</p>\n                      </div>\n                    </div>\n                  ))\n                )\n              ) : (\n                <div className=\"select__skeleton\">\n                  <div className=\"select__single-skeleton\">\n                    <Skeleton.Avatar\n                      className=\"select__avatar-skelton\"\n                      active={true}\n                      size=\"default\"\n                      shape=\"square\"\n                    />\n                    <Skeleton.Input\n                      className=\"select__input-skelton\"\n                      active={true}\n                      size=\"default\"\n                    />\n                  </div>\n                  <div className=\"select__single-skeleton\">\n                    <Skeleton.Avatar\n                      className=\"select__avatar-skelton\"\n                      active={true}\n                      size=\"default\"\n                      shape=\"square\"\n                    />\n                    <Skeleton.Input\n                      className=\"select__input-skelton\"\n                      active={true}\n                      size=\"default\"\n                    />\n                  </div>\n                  <div className=\"select__single-skeleton\">\n                    <Skeleton.Avatar\n                      className=\"select__avatar-skelton\"\n                      active={true}\n                      size=\"default\"\n                      shape=\"square\"\n                    />\n                    <Skeleton.Input\n                      className=\"select__input-skelton\"\n                      active={true}\n                      size=\"default\"\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"select__button\">\n          <Button type=\"primary\" onClick={handleButtonClick}>\n            Continue\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { fetchTests, fetchAttemptTests } from \"../actions/testActions\";\nimport { selectedTest } from \"../actions/selectActions\";\nimport { connect } from \"react-redux\";\nimport \"./SelectTest.css\";\nimport TestList from \"./TestList\";\n\nfunction SelectTest(props) {\n  const { tests, studentClassName, profileID } = props;\n\n  const handleSelectedTest =(testData)=>{\n      props.selectedTest(testData);\n  }\n\n  useEffect(() => {\n    props.fetchTests(studentClassName);\n    props.fetchAttemptTests(profileID);\n  }, []);\n\n  return (\n    <>\n      <div className=\"select__test__container\">\n       <TestList tests={tests} handleSelectedTest={handleSelectedTest} /> \n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    tests: state.tests.test,\n    profileID: state.auth.profileID,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchTests: (classID) => dispatch(fetchTests(classID)),\n    fetchAttemptTests: (profileID) => dispatch(fetchAttemptTests(profileID)),\n    selectedTest: (testData) =>dispatch(selectedTest(testData)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectTest);\n","import { logoutUser } from \"./authActions\";\nexport const TEST_SELECTED = \"TEST_SELECTED\";\nexport const SELECTED_TEST_RESULT = \"SELECTED_TEST_RESULT\";\nexport const SELECTED_ASSIGNED_TEST = \"SELECTED_ASSIGNED_TEST\";\n\nconst selectTest = (testData) => {\n  return {\n    type: TEST_SELECTED,\n    testData,\n  };\n};\n\nconst selectTestResult = (testData) => {\n  return {\n    type: SELECTED_TEST_RESULT,\n    testData,\n  };\n};\nconst selectAssignedTest = (testData) => {\n  return {\n    type: SELECTED_ASSIGNED_TEST,\n    testData,\n  };\n};\n\nexport const selectedTest = (data) => (dispatch) => {\n  dispatch(selectTest(data));\n};\n\nexport const selectedTestResult = (data) => (dispatch) => {\n  dispatch(selectTestResult(data));\n};\nexport const selectedAssignedTest = (data) => (dispatch) => {\n  dispatch(selectAssignedTest(data));\n};\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\nimport { connect } from \"react-redux\";\nimport SelectTest from \"./SelectTest\";\n\nfunction AttemptTest(props) {\n  const { studentClassName } = props;\n  return (\n    <>\n      <div className=\"container dashboard\">\n        <Row gutter={[48, 10]} justify=\"center\">\n          <Col className=\"gutter-row\" xs={24} sm={24} md={14} xl={14}>\n            <SelectTest studentClassName={studentClassName} />\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    studentClassName: state.auth.user ? state.auth.user.className : null,\n  };\n};\n\nexport default connect(mapStateToProps, null)(AttemptTest);\n","export const Roles ={\n    teacher: \"teacher\",\n    student: \"student\"\n}","import React, { useState, useEffect } from \"react\";\nimport { Menu, Grid } from \"antd\";\nimport { NavLink } from \"react-router-dom\";\nimport { logoutUser } from \"../actions/authActions\";\nimport { connect } from \"react-redux\";\nimport { Roles } from \"../Roles/roles\";\nimport { useLocation } from 'react-router-dom'\n// const SubMenu = Menu.SubMenu;\n// const MenuItemGroup = Menu.ItemGroup;\n\nconst { useBreakpoint } = Grid;\n\nconst LeftMenu = (props) => {\n  const [isAuthenticated, setisAuthenticated] = useState(false);\n  const location = useLocation();\n\n  \n  // const role = props.role;\n  const role = props.userInfo.role;\n  //console.log(props)\n\n  useEffect(() => {\n    setisAuthenticated(props.isAuthenticated);\n  }, [props]);\n\n  const signOut = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userProfile\");\n    localStorage.removeItem(\"profileID\");\n    props.signOut();\n  };\n\n  const handleProfile = () => {};\n\n  const { md } = useBreakpoint();\n  const homeRoute = isAuthenticated ? \"/\" : \"signin\";\n  const testRoute = isAuthenticated ? \"/attempt-test\" : \"signup\";\n  const resultRoute = isAuthenticated ? \"/result\" : \"\";\n  const signOutRoute = isAuthenticated ? \"/signin\" : \"\";\n  const profileRoute = isAuthenticated ? \"/profile\" : \"\";\n  const createTestRoute = isAuthenticated ? \"/create-test\" : \"\";\n  const assignedTestRoute = isAuthenticated ? \"/assigned-test\" : \"\";\n  //console.log(role)\n  const style ={\n    display: (location.pathname===\"/start-test\")?(\"none\"):(\"block\")\n  }\n\n  return (\n    <div className=\"menu\" style={style}>\n      <Menu mode={md ? \"horizontal\" : \"inline\"}>\n        <Menu.Item key=\"01\">\n          <NavLink to={homeRoute}>\n            {isAuthenticated ? \"Home\" : \"Sign In\"}\n          </NavLink>\n        </Menu.Item>\n        <Menu.Item key=\"02\">\n          <NavLink to={Roles.teacher === role ? createTestRoute : testRoute}>\n            {isAuthenticated\n              ? Roles.teacher === role\n                ? \"Create Test\"\n                : \"Attempt Test\"\n              : \"SignUp\"}\n          </NavLink>\n        </Menu.Item>\n        <Menu.Item key=\"03\" className={!isAuthenticated ? \"display-none\" : \"\"}>\n          <NavLink\n            to={Roles.teacher === role ? assignedTestRoute : resultRoute}\n          >\n            {isAuthenticated\n              ? Roles.teacher === role\n                ? \"Assigned Test\"\n                : \"Result\"\n              : \"\"}\n          </NavLink>\n        </Menu.Item>\n        <Menu.Item key=\"05\" className={!isAuthenticated ? \"display-none\" : \"\"}>\n          <NavLink to={profileRoute} onClick={handleProfile}>\n            {isAuthenticated ? \"Profile\" : \"\"}\n          </NavLink>\n        </Menu.Item>\n      </Menu>\n      <div className=\"right-side\">\n        <NavLink\n          to={signOutRoute}\n          onClick={signOut}\n          className={!isAuthenticated ? \"display-none signout\" : \"signout\"}\n        >\n          {isAuthenticated ? \"Sign Out\" : \"\"}\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n    userInfo: state.auth.user,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(logoutUser()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftMenu);\n","import React, { Component } from \"react\";\nimport LeftMenu from \"./LeftMenu\";\nimport { Drawer, Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport \"./Navbar.css\";\n\n\n\nclass Navbar extends Component {\n  state = {\n    current: \"mail\",\n    visible: false,\n  };\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    console.log(this.props.userInfo);\n\n    return (\n      <nav className=\"menuBar\">\n        <div className=\"logo\">\n          <Link >🎓 TALENTBUZZ</Link>\n        </div>\n        <div className=\"menuCon\">\n          <div className=\"leftMenu\">\n            <LeftMenu />\n          </div>\n          <Button className=\"barsMenu\" type=\"primary\" onClick={this.showDrawer}>\n            <span className=\"barsBtn\"></span>\n          </Button>\n          <Drawer\n            title=\"Menu\"\n            placement=\"right\"\n            closable={true}\n            onClose={this.onClose}\n            visible={this.state.visible}\n          >\n            <LeftMenu role={this.props} />\n          </Drawer>\n        </div>\n      </nav>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    userInfo: state.auth.user,\n  };\n};\nexport default connect(mapStateToProps, null)(Navbar);\n","import React, { useState, useEffect } from \"react\";\nimport { Input } from \"antd\";\nconst { Search } = Input;\nexport default function SearchBox(props) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    props.handleListData(searchTerm.toLowerCase());\n  }, [searchTerm]);\n\n  const handleSearchChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n  const onSearch = (value) => {\n    console.log(value);\n  };\n\n  return (\n    <>\n      <div className=\"search__input\">\n        <Search\n          placeholder=\"input search text\"\n          onSearch={onSearch}\n          onChange={handleSearchChange}\n          enterButton\n        />\n      </div>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Button } from \"antd\";\nimport SearchBox from \"./SearchBox\";\nimport { useHistory } from \"react-router-dom\";\nimport { Skeleton } from \"antd\";\n\nexport default function TestList(props) {\n  const history = useHistory();\n  const [tests, setTests] = useState([]);\n  const [searchTests, setSearchTests] = useState([]);\n  const [searching, setSearching] = useState(\"\");\n\n  useEffect(() => {\n    setTests(props.tests.reverse());\n  }, [props]);\n\n  const handleListData = (searchTerm) => {\n    if (searchTerm === \"\") setSearching(searchTerm);\n    else {\n      setSearching(true);\n      setSearchTests(\n        tests.filter((test) => test.testName.toLowerCase().includes(searchTerm))\n      );\n    }\n  };\n\n  let selectRef,\n    selectedData = {};\n\n  const handleButtonClick = () => {\n    props.handleSelectedTest(selectedData);\n    history.push(\n      `/result/${selectedData.testName?.replace(/\\s+/g, \"-\").toLowerCase()}`\n    );\n  };\n\n  const handleSelectTest = (e, index) => {\n    if (selectRef) {\n      selectRef.classList.remove(\"selected__test\");\n    }\n    selectRef = e.currentTarget;\n    e.currentTarget.classList.add(\"selected__test\");\n    selectedData = tests[index];\n    //console.log();\n  };\n\n  return (\n    <>\n      <div className=\"select__test__wrapper\">\n        <p className=\"test__wrapper__heading\">Attempted Test</p>\n        <div className=\"select__test__search__box\">\n          <p className=\"search__box__heading\">Search Test</p>\n          {<SearchBox handleListData={handleListData} />}\n          <div className=\"test__wrapper__body\">\n            <p className=\"test__wrapper__heading select__heading\">\n              Select Test\n            </p>\n            <div className=\"select__test__body\">\n              {tests.length > 0 ? (\n                searching !== \"\" ? (\n                  searchTests.map((test, index) => (\n                    <div\n                      key={index}\n                      className={`test__wrapper`}\n                      onClick={(e) => {\n                        handleSelectTest(e, index);\n                      }}\n                    >\n                      <p className=\"select__test\" key={index}>\n                        {test.testName}\n                      </p>\n                      <div className=\"test__time\">\n                        <p className=\"time start\">\n                          Published On: Oct 26 2020 12:14PM\n                        </p>\n                        <p className=\"time end\">\n                          Attempted On: Oct 29 2020 11:50PM\n                        </p>\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  tests.map((test, index) => (\n                    <div\n                      key={index}\n                      className={`test__wrapper`}\n                      onClick={(e) => {\n                        handleSelectTest(e, index);\n                      }}\n                    >\n                      <p className=\"select__test\" key={index}>\n                        {test.testName}\n                      </p>\n                      <div className=\"test__time\">\n                        <p className=\"time start\">\n                          Published On: Oct 26 2020 12:14PM\n                        </p>\n                        <p className=\"time end\">\n                          Attempted On: Oct 29 2020 11:50PM\n                        </p>\n                      </div>\n                    </div>\n                  ))\n                )\n              ) : (\n                <div className=\"select__skeleton\">\n                  <div className=\"select__single-skeleton\">\n                    <Skeleton.Avatar\n                      className=\"select__avatar-skelton\"\n                      active={true}\n                      size=\"default\"\n                      shape=\"square\"\n                    />\n                    <Skeleton.Input\n                      className=\"select__input-skelton\"\n                      active={true}\n                      size=\"default\"\n                    />\n                  </div>\n                  <div className=\"select__single-skeleton\">\n                    <Skeleton.Avatar\n                      className=\"select__avatar-skelton\"\n                      active={true}\n                      size=\"default\"\n                      shape=\"square\"\n                    />\n                    <Skeleton.Input\n                      className=\"select__input-skelton\"\n                      active={true}\n                      size=\"default\"\n                    />\n                  </div>\n                  <div className=\"select__single-skeleton\">\n                    <Skeleton.Avatar\n                      className=\"select__avatar-skelton\"\n                      active={true}\n                      size=\"default\"\n                      shape=\"square\"\n                    />\n                    <Skeleton.Input\n                      className=\"select__input-skelton\"\n                      active={true}\n                      size=\"default\"\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"select__button\">\n          <Button type=\"primary\" onClick={handleButtonClick}>\n            Continue\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { fetchAttemptTests } from \"../actions/testActions\";\nimport { selectedTestResult } from \"../actions/selectActions\";\nimport { connect } from \"react-redux\";\nimport \"./SelectTest.css\";\nimport TestList from \"./TestList\";\n\nfunction SelectTest(props) {\n  const { tests, profileID } = props;\n\n  const handleSelectedTest = (testData) => {\n    props.selectedTest(testData);\n  };\n\n  useEffect(() => {\n    props.fetchTests(profileID);\n  }, []);\n\n  return (\n    <>\n      <div className=\"select__test__container\">\n        <TestList tests={tests} handleSelectedTest={handleSelectedTest} />\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    tests: state.tests.attemptedTest,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchTests: (profileID) => dispatch(fetchAttemptTests(profileID)),\n    selectedTest: (testData) => dispatch(selectedTestResult(testData)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectTest);\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\nimport { connect } from \"react-redux\";\nimport SelectTest from \"./SelectTest\";\n\nfunction ResultWrapper(props) {\n  const { profileID } = props;\n  return (\n    <>\n      <div className=\"container dashboard\">\n        <Row gutter={[48, 10]} justify=\"center\">\n          <Col className=\"gutter-row\" xs={24} sm={24} md={14} xl={14}>\n            <SelectTest profileID={profileID} />\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    profileID: state.auth.user ? state.auth.profileID : null,\n  };\n};\n\nexport default connect(mapStateToProps, null)(ResultWrapper);\n","import React, {useState} from \"react\";\nimport { Row, Modal, Col, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport \"./TestInstruction.css\";\nimport { FaArrowCircleRight } from \"react-icons/fa\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction TestInstruction(props) {\n  //console.log(props.selectedTest);\n  const history = useHistory();\n  const { confirm } = Modal;\n  const { tests} = props;\n  const {\n    outOfMarks,\n    questions,\n    minutes,\n    category,\n    className,\n    testName,\n    rules,\n    _id: testID,\n  } = props.selectedTest;\n\n  let testRules, attempted=false;\n\n  if (rules) {\n    testRules = rules;\n  }\n  \n\n  tests.map((test, index)=>{\n    if(test.testName === testName){\n      attempted=true\n    }\n  })\n\n  const handleButtonClick = () => {\n    confirm({\n      title: \"Do you give test now?\",\n      icon: <ExclamationCircleOutlined />,\n      content: \"Once you click OK , timer will start!\",\n      onOk() {\n        // console.log(props.selectedTest);\n        console.log(\"OK\");\n        history.push(\"/start-test\");\n      },\n      onCancel() {\n        console.log(\"Cancel\");\n      },\n    });\n  };\n\n  return (\n    <>\n      <div className=\"container dashboard\">\n        <Row gutter={[48, 10]} justify=\"center\">\n          <Col className=\"gutter-row\" xs={24} sm={24} md={22} xl={22}>\n            <div className=\"instructions__wrapper\">\n              <Row justify=\"center\">\n                <Col className=\"gutter-row\" xs={24} sm={24} md={12} xl={12}>\n                  <div className=\"instructions__wrapper__left\">\n                    <p className=\"instructions__heading\">Test Instructions</p>\n                    <div className=\"test__info\">\n                      <div className=\"test__subheadings\">\n                        <div className=\"test__fields\">Test Name:</div>\n                        <div className=\"test__fields__Value\">{testName}</div>\n                      </div>\n\n                      <div className=\"test__subheadings\">\n                        <div className=\"test__fields\">Total Questions:</div>\n                        <div className=\"test__fields__Value\">\n                          {questions?.length}\n                        </div>\n                      </div>\n\n                      <div className=\"test__subheadings\">\n                        <div className=\"test__fields\">Allocated Time:</div>\n                        <div className=\"test__fields__Value\">\n                          {minutes} Minutes\n                        </div>\n                      </div>\n\n                      <div className=\"test__subheadings\">\n                        <div className=\"test__fields\">Category:</div>\n                        <div className=\"test__fields__Value\">{category}</div>\n                      </div>\n\n                      <div className=\"test__subheadings\">\n                        <div className=\"test__fields\">Total Marks:</div>\n                        <div className=\"test__fields__Value\">{outOfMarks}</div>\n                      </div>\n                    </div>\n                    <div className=\"test__instructions\">\n                      <p className=\"test__instructions__subheading\">\n                        Instructions\n                      </p>\n                      <div className=\"instructions\">\n                        {testRules?.map((rule, index) => (\n                          <p className=\"rule\" key={index}>\n                            <FaArrowCircleRight />{\" \"}\n                            <span className=\"rule__description\">\n                              {rule.value}\n                            </span>\n                          </p>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </Col>\n                <Col className=\"gutter-row\" xs={24} sm={24} md={12} xl={12}>\n                  <div className=\"instructions__wrapper__right\">\n                    <div className=\"ems__log__wrapper\">\n                      <img\n                        src=\"/ems-logo.png\"\n                        className=\"ems__logo\"\n                        alt=\"ems-logo\"\n                      />\n                    </div>\n                    <p className=\"navigation__instructions__heading\">\n                      Navigation Buttons\n                    </p>\n                    <div className=\"navigation__instructions\">\n                      <div className=\"navigation__buttons__Feature\">\n                        <Button\n                          style={{ backgroundColor: \"#449d44\" }}\n                          className=\"btn-instructions\"\n                        >\n                          Next\n                        </Button>\n                        <p className=\"button__description\">\n                          Next: By clicking Next button next question will\n                          appear to user\n                        </p>\n                      </div>\n                      <div className=\"navigation__buttons__Feature\">\n                        <Button\n                          style={{ backgroundColor: \"#449d44\" }}\n                          className=\"btn-instructions\"\n                        >\n                          Previous\n                        </Button>\n                        <p className=\"button__description\">\n                          Next: By clicking Next button next question will\n                          appear to user\n                        </p>\n                      </div>\n                      <div className=\"navigation__buttons__Feature\">\n                        <Button\n                          style={{ backgroundColor: \"#ec971f\" }}\n                          className=\"btn-instructions\"\n                        >\n                          Flag\n                        </Button>\n                        <p className=\"button__description\">\n                          Flag: By clicking Next button next question will\n                          appear to user\n                        </p>\n                      </div>\n                      <div className=\"navigation__buttons__Feature\">\n                        <Button\n                          style={{ backgroundColor: \"#ff4d4f\" }}\n                          className=\"btn-instructions\"\n                        >\n                          End Test\n                        </Button>\n                        <p className=\"button__description\">\n                          End Test: By clicking Next button next question will\n                          appear to user\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"select__button\">\n                      <Button\n                        type=\"primary\"\n                        onClick={handleButtonClick}\n                        disabled={attempted}\n                      >\n                        Continue\n                      </Button>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedTest: state.selectedTest.selectedTestData,\n     tests: state.tests.attemptedTest,\n  };\n};\n\nexport default connect(mapStateToProps, null)(TestInstruction);\n","import React from \"react\";\nimport { Row, Col, Divider, Progress } from \"antd\";\nimport { connect } from \"react-redux\";\nimport \"./ShowResult.css\";\nimport Chart from \"react-google-charts\";\n\nfunction ShowResult(props) {\n  const { testName, date } = props.selectedTest;\n  const testInfo = props.selectedTest[0];\n  let marks,\n    name,\n    rightAnswers,\n    submitMinutes,\n    totalMarks,\n    wrongAnswers,\n    totalAttempt;\n\n  if (testInfo) {\n    marks = testInfo.correct;\n    // name = testInfo.name;\n    rightAnswers = testInfo.correct;\n    submitMinutes = testInfo.submitMinutes;\n    totalMarks = testInfo.totalMarks;\n    wrongAnswers = testInfo.wrong;\n    totalAttempt = rightAnswers - -wrongAnswers;\n  }\n  const submitDate = new Date(date);\n  return (\n    <>\n      <div className=\"container dashboard\">\n        <Row gutter={[48, 10]} justify=\"center\">\n          <Col className=\"gutter-row\" xs={24} sm={24} md={14} xl={14}>\n            <div className=\"result__wrapper\">\n              <div className=\"result__wrapper__header\">\n                {/* <div className=\"result__heading\">\n                  <div className=\"result__test__name\">Name: </div>\n                  <div className=\"result__test__name__field\">{name}</div>\n                </div> */}\n                <div className=\"result__heading\">\n                  <div className=\"result__test__name\">Test Name: </div>\n                  <div className=\"result__test__name__field\">{testName}</div>\n                </div>\n                <div className=\"result__heading\">\n                  <div className=\"result__test__name\">Time Taken: </div>\n                  <div className=\"result__test__name__field\">\n                    {submitMinutes ? submitMinutes : \"XX\"} minutes\n                  </div>\n                </div>\n                <div className=\"result__heading\">\n                  <div className=\"result__test__name\">\n                    Test Submitted Date:{\" \"}\n                  </div>\n                  <div className=\"result__test__name__field\">\n                    {submitDate.toLocaleDateString(\"en-US\")}\n                  </div>\n                </div>\n              </div>\n              <Divider />\n              <div className=\"result__wrapper__body\">\n                <div className=\"percentage\">\n                  <div className=\"percentage__heading\">Your Score</div>\n                  <Progress\n                    percent={Math.floor((marks / totalMarks) * 100)}\n                    status=\"active\"\n                  />\n                </div>\n                <div className=\"marks__info\">\n                  <div className=\"marks__chart\">\n                    <Chart\n                      width={\"100%\"}\n                      height={\"100%\"}\n                      chartType=\"PieChart\"\n                      loader={<div>Loading Chart</div>}\n                      data={[\n                        [\"Task\", \"Hours per Day\"],\n                        [\"Correct\", marks / 10],\n                        [\"Wrong\", totalMarks / 10 - marks / 10],\n                      ]}\n                      options={{\n                        title: \"Marks Distribution\",\n                        // Just add this option\n                        pieHole: 0.45,\n                      }}\n                      rootProps={{ \"data-testid\": \"3\" }}\n                    />\n                  </div>\n                  <div className=\"marks\">\n                    <h2 className=\"inlarge\">Marks</h2>\n                    <div className=\"marksBox\">\n                      <div className=\"obtained__marks\">\n                        {marks} | {totalMarks}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"attempted\">\n                  <div className=\"total__attempted\">\n                    <div className=\"percentage\">\n                      <div className=\"percentage__heading\">\n                        Attempted: {totalAttempt}{\" \"}\n                      </div>\n                      <Progress\n                        percent={Math.floor((totalAttempt / totalMarks) * 100)}\n                        status=\"active\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"correct__attempted\">\n                    <div className=\"percentage\">\n                      <div className=\"percentage__heading\">\n                        Correct Answers: {rightAnswers}\n                      </div>\n                      <Progress\n                        percent={Math.floor((rightAnswers / totalMarks) * 100)}\n                        status=\"active\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedTest: state.selectedTest.selectedTestResultData,\n  };\n};\n\nexport default connect(mapStateToProps, null)(ShowResult);\n","import { logoutUser } from \"./authActions\";\nexport const UPDATE_ATTEMPT_TEST_REQUEST = \"UPDATE_ATTEMPT_TEST_REQUEST\";\nexport const UPDATE_ATTEMPT_TEST_SUCCESS = \"UPDATE_ATTEMPT_TEST_SUCCESS\";\nexport const UPDATE_ATTEMPT_TEST_FAILURE = \"UPDATE_ATTEMPT_TEST_FAILURE\";\n\nconst requestUpdateTimeSpent = () => {\n  return {\n    type: UPDATE_ATTEMPT_TEST_REQUEST,\n  };\n};\n\nconst receiveUpdateTimeSpent = (time) => {\n  return {\n    type: UPDATE_ATTEMPT_TEST_SUCCESS,\n    time,\n  };\n};\n\nconst updateTimeSpentError = () => {\n  return {\n    type: UPDATE_ATTEMPT_TEST_FAILURE,\n  };\n};\n\nexport const updateTimeSpentByStudent = (values) => (dispatch) => {\n  dispatch(requestUpdateTimeSpent());\n  let {\n    profileID,\n    testName,\n    completed,\n    minutes: totalTime,\n    _id: testID,\n    updatingAttemptedMinutes,\n  } = values;\n\n  updatingAttemptedMinutes =\n    updatingAttemptedMinutes !== 0 ? updatingAttemptedMinutes : 0;\n  console.log(parseInt(updatingAttemptedMinutes));\n  let subtractTime =\n    updatingAttemptedMinutes == 0 ? parseInt(totalTime) : parseInt(0);\n\n  let attemptedTime = Math.abs(\n    subtractTime - parseInt(updatingAttemptedMinutes - 1)\n  );\n\n  const data = { profileID, testName, completed, attemptedTime, totalTime };\n  console.log(completed, totalTime, data.attemptedTime);\n\n  const requestOptions = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"token\"),\n    },\n\n    body: JSON.stringify(data),\n  };\n\n  fetch(`/student/update-test-status/${testID}`, requestOptions)\n    .then((response) => response.json())\n    .then((data) => {\n      if (data) {\n        if (data?.error?.name === \"TokenExpiredError\") {\n          dispatch(logoutUser());\n        } else {\n          data.obj.testStatus.map((test, index) => {\n            if (test.testID === testID) {\n              localStorage.setItem(testID, test.attemptedTime);\n            }\n          });\n\n          console.log(data.obj);\n          dispatch(receiveUpdateTimeSpent(localStorage.getItem(testID)));\n        }\n      }\n    })\n    .catch((error) => {\n      //Do something with the error if you want!\n      console.log(error);\n      dispatch(updateTimeSpentError());\n    });\n};\n","import React, { useState, useEffect } from \"react\";\nimport CountdownTimer from \"react-component-countdown-timer\";\n\nexport default function Counter(props) {\n  const { testID, totalMinutes } = props;\n  let time;\n  if (JSON.parse(localStorage.getItem(`${testID}`)) == null) {\n    time = parseInt(totalMinutes) * 60;\n  } else {\n    const testData = JSON.parse(localStorage.getItem(`${testID}`));\n    let remainingTime = testData.rM;\n    time = parseInt(remainingTime * 60);\n  }\n  const handleCounterEnd =()=>{\n    props.handleCounter();\n  }\n\n  return (\n    <>\n      <CountdownTimer count={time} hideDay={true} onEnd={handleCounterEnd} />\n    </>\n  );\n}\n","import React, { Component } from \"react\";\n\nexport default class LeftSide extends Component {\n  constructor(props) {\n    super(props);\n    this.accordionContent = [];\n    this.state = {\n      questionsData: [],\n      selectRef: undefined,\n      activateQue: 0,\n      leftActiveQue: 0,\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      questionsData: props.questionsData,\n      activateQue: props.activateQue,\n      footerClick: props.footerClick,\n    };\n  }\n\n  changeBg = (activatedQue, answered, footerClicked) => {\n    if (this.state.selectRef) {\n      this.state.selectRef.classList.remove(\"selected\");\n      if (answered == false) {\n        this.state.selectRef.classList.remove(\"answered\");\n      }\n    }\n    if (this.accordionContent[activatedQue])\n      this.accordionContent[activatedQue].classList.add(\"selected\");\n    if (answered && footerClicked == false) {\n      this.accordionContent[activatedQue].classList.add(\"answered\");\n    }\n    this.setState({\n      selectRef: this.accordionContent[activatedQue],\n    });\n  };\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      nextProps === this.props &&\n      nextProps.activateQue == this.props.activateQue\n    ) {\n      return false;\n    } else if (nextProps.selectRef !== this.props.selectRef) {\n      return false;\n    } else if (nextProps.flag !== this.props.flag) {\n      return false;\n    } else {\n      this.changeBg(\n        nextProps.activateQue,\n        nextProps.answered,\n        nextProps.footerClick\n      );\n\n      return true;\n    }\n  }\n  flagQuestion = () => {\n    this.state.selectRef.classList.add(\"flagged\");\n  };\n  componentDidMount() {\n    this.props.flagClicked(this.flagQuestion);\n  }\n\n  setFlag = () => {\n    this.state.selectRef.classList.add(\"add-flag\");\n  };\n\n  render() {\n    const handleClick = (e, index) => {\n      if (this.state.selectRef) {\n        this.state.selectRef.classList.remove(\"selected\");\n      }\n\n      this.setState({\n        selectRef: this.accordionContent[index],\n        leftActiveQue: index,\n      });\n      this.accordionContent[index].classList.add(\"selected\");\n\n      this.props.handleQuestionClick(index);\n    };\n\n    return (\n      <>\n        <div className=\"questions__wrapper\">\n          {this.state.questionsData &&\n            this.state.questionsData.map((question, index) => (\n              <div\n                className={`question`}\n                ref={(ref) => (this.accordionContent[index] = ref)}\n                onClick={(e) => handleClick(e, index)}\n                key={index}\n              >\n                {index - -1}\n              </div>\n            ))}\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Radio, Input } from \"antd\";\nimport { CloseOutlined } from \"@ant-design/icons\";\nimport { submitTest } from \"../actions/testActions\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { logoutUser } from \"../actions/authActions\";\n\nclass RightSide extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activateQue: 0,\n      questionsData: [],\n      changeIndex: 0,\n      questionIndex: 0,\n      selectedAnswers: Array.apply(undefined, Array(5)),\n      value: null,\n      testID: null,\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      questionsData: props.questionsData,\n      questionIndex: props.questionIndex,\n      testID: props.testID,\n    };\n  }\n\n  handleClearResponse = (index) => {\n    let newSelectedAnswers = this.state.selectedAnswers;\n    console.log(newSelectedAnswers[index]);\n    let blankClearAttempt =\n      newSelectedAnswers[index] === undefined ? true : false;\n\n    newSelectedAnswers[index] = undefined;\n    this.setState({\n      selectedAnswers: newSelectedAnswers,\n    });\n    this.props.handleClearResponse(index, blankClearAttempt);\n  };\n  onChange = (e, index) => {\n    let newSelectedAnswers = this.state.selectedAnswers;\n    if (newSelectedAnswers[index] === undefined) {\n      this.props.questionAnswered(index, e.target.value, false);\n    } else {\n      this.props.questionAnswered(index, e.target.value, true);\n    }\n    newSelectedAnswers[index] = e.target.value;\n    this.setState({\n      value: e.target.value,\n      selectedAnswers: newSelectedAnswers,\n    });\n  };\n  componentDidMount() {\n    this.props.onRef(this);\n  }\n\n  changeActivatedQueInChild = (changeActivatedQue) => {\n    if (changeActivatedQue === \"next__question\") {\n      console.log(\"insdie if\");\n      console.log(this.state.questionsData.length, this.state.activateQue);\n      if (this.state.activateQue < this.state.questionsData.length - 1) {\n        this.setState({\n          activateQue: this.state.activateQue + 1,\n        });\n        this.props.changeParentActivatedQue(this.state.activateQue + 1);\n      }\n    } else if (changeActivatedQue === \"previous__question\") {\n      if (this.state.activateQue > 0) {\n        this.setState({\n          activateQue: this.state.activateQue - 1,\n        });\n        this.props.changeParentActivatedQue(this.state.activateQue - 1);\n      }\n    } else if (changeActivatedQue === \"flag__question\") {\n    } else if (changeActivatedQue === \"end__test\") {\n    } else {\n      this.setState({\n        activateQue: changeActivatedQue,\n      });\n    }\n  };\n  componentWillUnmount() {\n    this.props.onRef(undefined);\n  }\n  submitTest = () => {\n    const {\n      userAnswers,\n      answers,\n      testName,\n      testID,\n      profileID,\n      firstName,\n      lastName,\n    } = this.props;\n    let correct = 0,\n      wrong = 0,\n      unanswered = 0,\n      totalMarks = answers.length,\n      dataToSubmit;\n\n    userAnswers.map((element, index) => {\n      if (element === undefined) {\n        unanswered = unanswered + 1;\n      } else if (element !== answers[index]) {\n        wrong = wrong + 1;\n      } else {\n        correct = correct + 1;\n      }\n      dataToSubmit = {\n        testID,\n        correct,\n        unanswered,\n        totalMarks,\n        profileID,\n        testName,\n        firstName,\n        lastName,\n        wrong,\n      };\n    });\n    this.props.submitTest(dataToSubmit);\n    this.props.signOut();\n    return;\n  };\n  render() {\n    const radioStyle = {\n      display: \"block\",\n      height: \"30px\",\n      lineHeight: \"30px\",\n    };\n\n    return (\n      <>\n        <div className=\"descripiton__wrapper\">\n          <div className=\"question__no\">\n            Question {this.state.activateQue + 1} out of {this.state.questionsData.length}\n          </div>\n          {this.state.questionsData &&\n            this.state.questionsData.map((question, index) => {\n              if (this.state.activateQue === index) {\n                return (\n                  <div className=\"description__box\" key={index}>\n                    <div className=\"descripiton\"> {question.description}</div>\n                    <div className=\"options\">\n                      <Radio.Group\n                        onChange={(e) => this.onChange(e, index)}\n                        value={this.state.selectedAnswers[index]}\n                      >\n                        <Radio style={radioStyle} value={1}>\n                          {question.options[0].option}\n                        </Radio>\n                        <Radio style={radioStyle} value={2}>\n                          {question.options[1].option}\n                        </Radio>\n                        <Radio style={radioStyle} value={3}>\n                          {question.options[2].option}\n                        </Radio>\n                        <Radio style={radioStyle} value={4}>\n                          {question.options[3].option}\n                        </Radio>\n                      </Radio.Group>\n                      <div\n                        className=\"clear__response\"\n                        onClick={() => this.handleClearResponse(index)}\n                      >\n                        {<CloseOutlined />} Clear Response\n                      </div>\n                    </div>\n                  </div>\n                );\n              }\n            })}\n        </div>\n      </>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    selectedTest: state.selectedTest.selectedTestData,\n    profileID: state.auth.user ? state.auth.profileID : null,\n    firstName: state.auth.user.firstName,\n    lastName: state.auth.user.lastName,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    submitTest: (data) => dispatch(submitTest(data)),\n    signOut: () => dispatch(logoutUser()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RightSide);\n","import React, { Component } from \"react\";\n\nexport default class Footer extends Component {\n  handleNext = (e) => {\n    //this.props.handleNextButton()\n    // console.log(e.currentTarget.classList[0])\n    this.props.handleFooterButtons(e.currentTarget.classList[0]);\n  };\n  submitTest = () => {\n    this.props.handleSubmitTest();\n  };\n  render() {\n    return (\n      <>\n        <div className=\"footer__wrapper\">\n          <div className=\"left__footer\">\n            <div\n              className=\"previous__question box\"\n              onClick={(e) => this.handleNext(e)}\n            >\n              Previous\n            </div>\n            <div\n              className=\"flag__question box\"\n              onClick={(e) => this.handleNext(e)}\n            >\n              Flag\n            </div>\n            <div\n              className=\"next__question box\"\n              onClick={(e) => this.handleNext(e)}\n            >\n              Next\n            </div>\n          </div>\n          <div className=\"right__footer\">\n            <div className=\"end__test box\" onClick={this.submitTest}>\n              End Test\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateTimeSpentByStudent } from \"../actions/attemptTestActions\";\nimport \"./HandleLiveTest.css\";\nimport LeftSide from \"./LeftSide\";\nimport RightSide from \"./RightSide\";\nimport Footer from \"./Footer\";\nimport { questions } from \"./mockData\";\nimport Counter from \"./Counter\";\n\nclass HandleLiveTest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      testID: undefined,\n      totalMinutes: undefined,\n      questionsData: [],\n      answers: [],\n      totalScore: 0,\n      footerClick: false,\n      activateQue: 0,\n      totalAnswered: 0,\n      answered: false,\n      totalPending: null,\n      totalFlagged: 0,\n      questionIndex: 0,\n      flag: 0,\n      testName: null,\n      userAnswers: Array.apply(undefined, Array(5)),\n    };\n  }\n\n  componentDidMount() {\n    //  const answers = question\n    // make a call using redux\n    this.props.counterEnd(this.submitTestOnCounterEnd);\n\n    this.setState({\n      questionsData: this.props.selectedTest.questions,\n      // questionsData:questions,\n      answers: this.props.selectedTest.answers,\n      testID: this.props.testID,\n      testName: this.props.selectedTest.testName,\n      totalPending: this.props.selectedTest.questions.length,\n    });\n    // fire function given by redux\n  }\n\n  changeActivatedQueFromFooter = (changeActivatedQue) => {\n    if (changeActivatedQue !== \"flag__question\") {\n      this.setState({\n        footerClick: true,\n      });\n      this.child.changeActivatedQueInChild(changeActivatedQue);\n    } else {\n      this.triggerFlag();\n      if (this.state.flag <= this.state.questionsData.length) {\n        this.setState({\n          flag: this.state.flag + 1,\n        });\n      }\n    }\n  };\n  handleSubmitTest = () => {\n    this.child.submitTest();\n  };\n  changeParentActivatedQue = (index) => {\n    this.setState({\n      activateQue: index,\n      footerClick: true,\n    });\n  };\n  submitTestOnCounterEnd = () => {\n    this.handleSubmitTest();\n  };\n\n  handleFooterButtons = (buttonClicked) => {\n    this.changeActivatedQueFromFooter(buttonClicked);\n  };\n\n  handleClearResponse = (index, blankClearAttempt) => {\n    if (!blankClearAttempt) {\n      let updatedUserAnswers = this.state.userAnswers;\n      updatedUserAnswers[index] = undefined;\n      this.setState({\n        totalAnswered: this.state.totalAnswered - 1,\n        totalPending: this.state.totalPending + 1,\n        userAnswers: updatedUserAnswers,\n        activateQue: index,\n        footerClick: false,\n        answered: false,\n      });\n    }\n  };\n  questionAnswered = (index, option, changed) => {\n    if (!changed) {\n      let updatedUserAnswers = this.state.userAnswers;\n      updatedUserAnswers[index] = option;\n      this.setState({\n        totalAnswered: this.state.totalAnswered + 1,\n        totalPending: this.state.totalPending - 1,\n        userAnswers: updatedUserAnswers,\n        activateQue: index,\n        footerClick: false,\n        answered: true,\n      });\n    } else {\n      // answers array\n      let updatedUserAnswers = this.state.userAnswers;\n      updatedUserAnswers[index] = option;\n      this.setState({\n        userAnswers: updatedUserAnswers,\n        activateQue: index,\n        footerClick: false,\n        answered: true,\n      });\n    }\n  };\n  handleQuestionClick = (index) => {\n    this.child.changeActivatedQueInChild(index);\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"question_board\">\n          <div className=\"left__side\">\n            <div className=\"test__info\">\n              <div className=\"username\"></div>\n              <div className=\"test__name\">\n                TestName: <span className=\"danger\">{this.props.testName}</span>\n              </div>\n              <div className=\"total__minutes\">\n                Total Minutes:{\" \"}\n                <span className=\"danger\">{this.props.totalMinutes}</span>\n              </div>\n            </div>\n            <div className=\"questions__status\">\n              <div className=\"total__answered box\">\n                <span className=\"count__answered\">\n                  {this.state.totalAnswered}{\" \"}\n                </span>\n                Answered\n              </div>\n              <div className=\"total__flagged box\">\n                <span className=\"count__flagged\">{this.state.flag} </span>\n                Flagged\n              </div>\n              <div className=\"total__pending box\">\n                <span className=\"count__pending\">\n                  {this.state.totalPending}{\" \"}\n                </span>\n                Pending\n              </div>\n            </div>\n            <LeftSide\n              questionsData={this.state.questionsData}\n              handleQuestionClick={this.handleQuestionClick}\n              activateQue={this.state.activateQue}\n              answered={this.state.answered}\n              footerClick={this.state.footerClick}\n              onRef={(ref) => (this.child = ref)}\n              flagClicked={(click) => (this.triggerFlag = click)}\n              flag={this.state.flag}\n            />\n          </div>\n          <RightSide\n            questionsData={this.state.questionsData}\n            questionAnswered={this.questionAnswered}\n            questionIndex={this.state.questionIndex}\n            handleClearResponse={this.handleClearResponse}\n            onRef={(ref) => (this.child = ref)}\n            changeParentActivatedQue={this.changeParentActivatedQue}\n            userAnswers={this.state.userAnswers}\n            answers={this.state.answers}\n            testID={this.state.testID}\n            testName={this.state.testName}\n          />\n          <div className=\"footer\">\n            <Footer\n              handleFooterButtons={this.handleFooterButtons}\n              handleSubmitTest={this.handleSubmitTest}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedTest: state.selectedTest.selectedTestData,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateTimer: (data) => dispatch(updateTimeSpentByStudent(data)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HandleLiveTest);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateTimeSpentByStudent } from \"../actions/attemptTestActions\";\nimport Counter from \"./Counter\";\nimport HandleLiveTest from \"./HandleLiveTest\";\n\nclass TestPreview extends Component {\n  state = {\n    testName: this.props.selectedTest.testName,\n    minutes: this.props.selectedTest.minutes,\n    _id: this.props.selectedTest._id,\n    intervalId: null,\n    timer: this.props.timer,\n  };\n\n  componentDidMount() {\n    this.loadData(this.state._id);\n    const intervalID = setInterval(this.loadData.bind(this), 60000);\n    this.setState({ intervalId: intervalID, timer: this.state.timer });\n  }\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n  handleCounter =()=>{\n    this.clickChild();\n  }\n\n  loadData() {\n    try {\n      //   let testName, minutes, _id;\n      let testName, tM, _id, rM;\n      if (JSON.parse(localStorage.getItem(this.state._id)) === null) {\n        testName = this.state.testName;\n        tM = this.state.minutes;\n        _id = this.state._id;\n        rM = tM;\n        localStorage.setItem(\n          `${_id}`,\n          JSON.stringify({ testName, _id, tM, rM })\n        );\n      } else {\n        const testData = JSON.parse(localStorage.getItem(`${this.state._id}`));\n\n        let { testName, tM, _id, rM } = testData;\n        rM = rM - 1;\n        localStorage.setItem(\n          `${_id}`,\n          JSON.stringify({ testName, _id, tM, rM })\n        );\n      }\n\n      //   const profileID = localStorage.getItem(\"profileID\"),\n      //     completed = false;\n      //   const testData = JSON.parse(localStorage.getItem(\"trash\"));\n      //   let updatingAttemptedMinutes = localStorage.getItem(testData._id);\n\n      //   const data = {\n      //     profileID,\n      //     testName,\n      //     _id,\n      //     completed,\n      //     minutes,\n      //     updatingAttemptedMinutes,\n      //   };\n      //   //console.log(this.props.selectedTest, \"props\")\n      //   if (_id) {\n      //    // this.props.updateTimer(data);\n      //   }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  \n \n\n  render() {\n    return (\n      <>\n        <Counter testID={this.state._id} totalMinutes={this.state.minutes} handleCounter ={this.handleCounter}/>\n        <HandleLiveTest\n          testID={this.state._id}\n          totalMinutes={this.state.minutes}\n          testName={this.state.testName}\n          testName={this.state.testName}\n          totalMinutes={this.state.minutes}\n          counterEnd ={click => this.clickChild = click}\n        />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedTest: state.selectedTest.selectedTestData,\n    timer: state.userAttemptedTime.attemptedTime,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateTimer: (data) => dispatch(updateTimeSpentByStudent(data)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TestPreview);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport TestPreview from \"./TestPreview\";\nfunction TestPreviewWrapper(props) {\n  const { selectedTest } = props;\n  const isSelected = Object.keys(selectedTest).length == 0 ? false : true;\n  return (\n    <>{isSelected ? <TestPreview /> : <p>Please select a test first</p>}</>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedTest: state.selectedTest.selectedTestData,\n  };\n};\n\nexport default connect(mapStateToProps, null)(TestPreviewWrapper);\n","import React, { Component } from \"react\";\nimport { Row, Col, Form, Input, Avatar, Popover } from \"antd\";\nimport { connect } from \"react-redux\";\nimport \"./Profile.css\";\nimport { Roles } from \"../Roles/roles\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: undefined,\n      isVerified: undefined,\n      lastName: undefined,\n      email: undefined,\n      phone: undefined,\n      role: undefined,\n      section: undefined,\n      isVerified: undefined,\n    };\n  }\n  submitForm = (values) => {\n    //props.sendSignUpRequest(values);\n    console.log(values);\n  };\n  static getDerivedStateFromProps(props, state) {\n    return {\n      firstName: props.user.firstName,\n      lastName: props.user.lastName,\n      email: props.user.email,\n      isVerified: props.userisVerified,\n      phone: props.user.phone,\n      role: props.user.role,\n      section: props.user.section,\n      isVerified: props.user.isVerified,\n      className: props.user.className,\n    };\n  }\n  render() {\n    console.log(this.props.user);\n    const verfied = (\n      <div>\n        <p className=\"verified-popover\">Verified !</p>\n      </div>\n    );\n    const notVerfied = (\n      <div>\n        <p className=\"notverifieid-popover\">Not Verified!</p>\n      </div>\n    );\n    return (\n      <>\n        <Row justify=\"center\" align=\"middle\" className=\"hero\">\n          <Col xs={22} sm={22} md={8} lg={8} className=\"signup__container\">\n            <div className=\"avatar-wrapper\">\n              <Avatar\n                size={{ xs: 80, sm: 80, md: 80, lg: 80, xl: 90, xxl: 100 }}\n                src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n                className=\"avatar-image\"\n              />\n               <Popover content={this.state.isVerified ? notVerfied : verfied}>\n                <img\n                  src={ \n                    this.state.isVerified ?   \"/notVerified.png\" : \"/verified.png\"\n                  }\n                  alt=\"verification\"\n                  className=\"verified\"\n                />\n              </Popover>\n           \n              <p\n                className=\"profile__heading\"\n                style={{ margin: 0, textAlign: \"center\" }}\n              >\n                Your Profile\n              </p>\n            </div>\n            <Form\n              name=\"basic\"\n              initialValues={{\n                remember: true,\n              }}\n              onFinish={this.submitForm}\n            >\n              <div className=\"element__wrapper\">\n                <Form.Item>\n                  <Input\n                    placeholder=\"First Name\"\n                    readonly=\"readOnly\"\n                    value={this.state.firstName}\n                    className=\"input\"\n                  />\n                </Form.Item>\n                <Form.Item>\n                  <Input\n                    placeholder=\"Last Name\"\n                    readonly=\"readOnly\"\n                    value={this.state.lastName}\n                    className=\"input\"\n                  />\n                </Form.Item>\n              </div>\n              <Form.Item>\n                <Input\n                  placeholder=\"abcd@gmail.com\"\n                  readonly=\"readOnly\"\n                  value={this.state.email}\n                  className=\"input\"\n                />\n              </Form.Item>\n              <Form.Item>\n                <Input\n                  type=\"tel\"\n                  placeholder=\"7275XXXXXX\"\n                  readonly=\"readOnly\"\n                  value={this.state.phone}\n                  className=\"input\"\n                />\n              </Form.Item>\n              <div className=\"element__wrapper\">\n                <Form.Item>\n                  <Input\n                    placeholder=\"Role\"\n                    readonly=\"readOnly\"\n                    value={this.state.role}\n                    className=\"input\"\n                  />\n                </Form.Item>\n                <Form.Item\n                  className={Roles.teacher === this.state.role ? \"hidden\" : \"\"}\n                >\n                  <Input\n                    placeholder=\"Class\"\n                    readonly=\"readOnly\"\n                    value={this.state.className}\n                    className=\"input\"\n                  />\n                </Form.Item>\n                <Form.Item\n                  className={Roles.teacher === this.state.role ? \"hidden\" : \"\"}\n                >\n                  <Input\n                    placeholder=\"Section\"\n                    readonly=\"readOnly\"\n                    value={this.state.section}\n                    className=\"input\"\n                  />\n                </Form.Item>\n              </div>\n            </Form>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.auth.user ? state.auth.user : null,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","import React, { useState } from \"react\";\nimport { AiFillPlusCircle } from \"react-icons/ai\";\nimport { Input, Popover } from \"antd\";\n\nexport default function Rules(props) {\n  const [rule, setRule] = useState(\"\");\n  const submitInput = (\n    <div>\n      <p className=\"verified-popover \">Add Rule</p>\n    </div>\n  );\n\n  const handleOnChnage = (e) => {\n    setRule(e.target.value);\n  };\n  const handleAddRule = () => {\n    if (rule !== \"\") {\n      props.addRule(rule);\n      setRule(\"\");\n    }\n  };\n  \n  return (\n    <>\n      <div className=\"rules__wrapper\">\n        <div className=\"options__wrapper\">\n          <Input\n            placeholder=\"Write your rule for test\"\n            className=\"input\"\n            value={rule}\n            onChange={handleOnChnage}\n            style={{ margin: \"0 5px\" }}\n          />\n          <div className=\"add__new\" onClick={handleAddRule}>\n            {\n              <Popover content={submitInput}>\n                <AiFillPlusCircle className=\"success\" />\n              </Popover>\n            }\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Input, Popover } from \"antd\";\nimport { AiFillPlusCircle } from \"react-icons/ai\";\n\nexport default function Rules(props) {\n  const [questionDescripiton, setQuestionDescripiton] = useState(\"\");\n  const [opiton1, setOption1] = useState(\"\");\n  const [opiton2, setOption2] = useState(\"\");\n  const [opiton3, setOption3] = useState(\"\");\n  const [opiton4, setOption4] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const submitInput = (\n    <div>\n      <p className=\"verified-popover \">Add Question</p>\n    </div>\n  );\n\n  const handleOnChangeQuestion = (e) => {\n    setQuestionDescripiton(e.target.value);\n  };\n  const handleOption1 = (e) => {\n    setOption1(e.target.value);\n  };\n  const handleOption2 = (e) => {\n    setOption2(e.target.value);\n  };\n  const handleOption3 = (e) => {\n    setOption3(e.target.value);\n  };\n  const handleOption4 = (e) => {\n    setOption4(e.target.value);\n  };\n  const handleAnswer = (e) => {\n    setAnswer(e.target.value);\n  };\n  const handleAddQuestion = () => {\n    const questionData = {\n      questionDescripiton,\n      opiton1,\n      opiton2,\n      opiton3,\n      opiton4,\n      answer,\n    };\n\n    props.addQuestion(questionData);\n    console.log(questionData);\n    setQuestionDescripiton(\"\");\n    setOption1(\"\");\n    setOption2(\"\");\n    setOption3(\"\");\n    setOption4(\"\");\n    setAnswer(\"\");\n  };\n\n  return (\n    <>\n      <div className=\"rules__wrapper\">\n        <div className=\"options__wrapper \">\n          <Input.TextArea\n            placeholder=\"Question Description\"\n            className=\"input \"\n            value={questionDescripiton}\n            onChange={handleOnChangeQuestion}\n            style={{ margin: \"0 5px\" }}\n          />\n          <div className=\"add__new\" onClick={handleAddQuestion}>\n            {\n              <Popover content={submitInput}>\n                <AiFillPlusCircle className=\"success\" />\n              </Popover>\n            }\n          </div>\n        </div>\n        <div className=\"question__options\">\n          <Input\n            placeholder=\"Option 1\"\n            className=\"input option\"\n            value={opiton1}\n            onChange={handleOption1}\n            style={{ margin: \"10 5px\" }}\n          />\n          <Input\n            placeholder=\"Option 2\"\n            className=\"input option\"\n            value={opiton2}\n            onChange={handleOption2}\n            style={{ margin: \"10 5px\" }}\n          />\n          <Input\n            placeholder=\"Option 3\"\n            className=\"input option\"\n            value={opiton3}\n            onChange={handleOption3}\n            style={{ margin: \"10 5px\" }}\n          />\n          <Input\n            placeholder=\"Option 4\"\n            className=\"input option\"\n            value={opiton4}\n            onChange={handleOption4}\n            style={{ margin: \"10 5px\" }}\n          />\n          <Input\n            placeholder=\"Enter Correct Option No. i.e 1, 2 etc\"\n            type=\"number\"\n            className=\"input option\"\n            value={answer}\n            onChange={handleAnswer}\n            style={{ margin: \"10 5px\" }}\n            min={1}\n            max={4}\n            \n          />\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Input, Popover } from \"antd\";\nimport { TiDelete } from \"react-icons/ti\";\n\nexport default function RenderData(props) {\n  const { ruleData, questionData, question, rules } = props;\n\n  const handleClick = (index) => {\n    props.clickedRule(index);\n  };\n  return (\n    <div className=\"renderData__wrapper\">\n      {rules\n        ? ruleData &&\n          ruleData.map((item, index) => (\n            <div key={index}>\n              <p className=\"sub__render__heading\">Rule {index + 1}</p>\n              <div className=\"render__item\">\n                <Input\n                  readonly=\"readOnly\"\n                  value={item.value}\n                  className=\"input\"\n                  style={{ margin: \"0 5px\" }}\n                />\n                <TiDelete\n                  className=\"danger\"\n                  onClick={() => handleClick(index)}\n                  style={{ fontSize:\"30px\"}}\n                />\n              </div>\n            </div>\n          ))\n        : questionData &&\n          questionData.map((item, index) => (\n            <div key={index}>\n              <p className=\"sub__render__heading\">Question {index + 1}</p>\n              <div className=\"render__item\">\n                <Input.TextArea\n                  readonly=\"readOnly\"\n                  value={item.questionDescripiton}\n                  className=\"input\"\n                  style={{ margin: \"0 5px\" }}\n                />\n                <TiDelete\n                  className=\"danger\"\n                  onClick={() => handleClick(index)}\n                  style={{ fontSize:\"30px\"}}\n                />\n              </div>\n              <div className=\"question__options\">\n                <Input\n                  className=\"input option\"\n                  value={item.opiton1}\n                  readonly=\"readOnly\"\n                  style={{ margin: \"10 5px\" }}\n                />\n                <Input\n                  className=\"input option\"\n                  value={item.opiton2}\n                  readonly=\"readOnly\"\n                  style={{ margin: \"10 5px\" }}\n                />\n                <Input\n                  className=\"input option\"\n                  value={item.opiton3}\n                  readonly=\"readOnly\"\n                  style={{ margin: \"10 5px\" }}\n                />\n                <Input\n                  className=\"input option\"\n                  value={item.opiton4}\n                  readonly=\"readOnly\"\n                  style={{ margin: \"10 5px\" }}\n                />\n                <Input\n                  type=\"number\"\n                  className=\"input option\"\n                  value={item.answer}\n                  readonly=\"readOnly\"\n                  style={{ margin: \"10 5px\" }}\n                />\n              </div>\n            </div>\n          ))}\n    </div>\n  );\n}\n","import { logoutUser } from \"./authActions\";\nexport const SUBMIT_TEST_REQUEST = \"SUBMIT_TEST_REQUEST\";\nexport const SUBMIT_TEST_SUCCESS = \"SUBMIT_TEST_SUCCESS\";\nexport const SUBMIT_TEST_FAILURE = \"SUBMIT_TEST_FAILURE\";\n\nexport const ASSIGNED_TEST_REQUEST = \"ASSIGNED_TEST_REQUEST\";\nexport const ASSIGNED_TEST_SUCCESS = \"ASSIGNED_TEST_SUCCESS\";\nexport const ASSIGNED_TEST_FAILURE = \"ASSIGNED_TEST_FAILURE\";\n\nexport const SET_TEST_CREATED_FALSE = \"SET_TEST_CREATED_FALSE\";\n\nconst requestSubmitTest = () => {\n  return {\n    type: SUBMIT_TEST_REQUEST,\n  };\n};\n\nconst receiveSubmitTest = (user, profileID) => {\n  return {\n    type: SUBMIT_TEST_SUCCESS,\n  };\n};\n\nconst submitTestError = () => {\n  return {\n    type: SUBMIT_TEST_FAILURE,\n  };\n};\n\nconst requestAssignedTest = () => {\n  return {\n    type: ASSIGNED_TEST_REQUEST,\n  };\n};\n\nconst receiveAssignedTest = (tests) => {\n  return {\n    type: ASSIGNED_TEST_SUCCESS,\n    tests,\n  };\n};\n\nconst AssignedTestError = () => {\n  return {\n    type: ASSIGNED_TEST_FAILURE,\n  };\n};\n\nconst setTestCreatedFalse = () => {\n  return {\n    type: SET_TEST_CREATED_FALSE,\n  };\n};\n\nexport const submitTest = (values) => (dispatch) => {\n  console.log(values);\n\n  dispatch(requestSubmitTest());\n\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"token\"),\n    },\n\n    body: JSON.stringify(values),\n  };\n  //console.log(\"Success:\", values);\n  fetch(\"/teacher/create-test\", requestOptions)\n    .then((response) => response.json())\n    .then((data) => {\n      if (data?.error?.name === \"TokenExpiredError\") {\n        dispatch(logoutUser());\n      } else {\n        dispatch(receiveSubmitTest(data.user));\n      }\n    })\n    .catch((error) => {\n      //Do something with the error if you want!\n      console.log(error);\n      dispatch(submitTestError());\n    });\n};\n\nexport const fetchAssignedTests = (profileID) => async (dispatch) => {\n  dispatch(requestAssignedTest());\n\n  const requestOptions = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"token\"),\n    },\n  };\n\n  await fetch(`/teacher/tests/${profileID}`, requestOptions)\n    .then((response) => response.json())\n    .then((data) => {\n      if (data) {\n        if (data?.error?.name === \"TokenExpiredError\") {\n          dispatch(logoutUser());\n        } else {\n          dispatch(receiveAssignedTest(data.obj));\n        }\n        // history.push(\"/studentHome\");\n      }\n    })\n    .catch((error) => {\n      //Do something with the error if you want!\n      console.log(error);\n      dispatch(AssignedTestError());\n    });\n};\n\nexport const testCreatedFalse = () => async (dispatch) => {\n  dispatch(setTestCreatedFalse());\n};\n","import React, { Component } from \"react\";\nimport { Row, Col, Form, Input, Button, Select, notification } from \"antd\";\nimport \"./index.css\";\nimport { connect } from \"react-redux\";\nimport Rules from \"./Rules\";\nimport Questions from \"./Questions\";\nimport RenderData from \"./RenderData\";\nimport { submitTest, testCreatedFalse } from \"../../actions/TeacherActions\";\n\nclass CreateTest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rules: [],\n      questions: [],\n      isLoading: false,\n      testCreated: false,\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      isLoading: props.isLoading,\n      testCreated: props.testCreated,\n    };\n  }\n\n  submitForm = (values) => {\n    let questions = [];\n    let answers = [];\n    console.log(values);\n\n    const {\n      testName,\n      category,\n      className,\n      section,\n      minutes,\n      outOfMarks,\n    } = values;\n\n\n    questions = this.state.questions.map((question, index) => {\n      return {\n        description: question.questionDescripiton,\n        options: [\n          {\n            option: question.opiton1,\n          },\n          {\n            option: question.opiton2,\n          },\n          {\n            option: question.opiton3,\n          },\n          {\n            option: question.opiton4,\n          },\n        ],\n      };\n    });\n    this.state.questions.map((question, index) => {\n      answers.push(parseInt(question.answer));\n    });\n    const teacherId = this.props.teacherID;\n    const rules = this.state.rules;\n\n    const sendData = {\n      teacherId,\n      testName,\n      category,\n      className,\n      section,\n      rules,\n      testCreated: false,\n      minutes,\n      outOfMarks,\n      questions,\n      answers,\n    };\n\n    this.props.submitTest(sendData);\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  handleSelect = (select, optionData) => {};\n\n  handleDeleteRule = (Removeindex) => {\n    \n    this.setState({\n      rules: this.state.rules.filter((item, index) => index !== Removeindex),\n    });\n  };\n  handleDeleteQuestion = (Removeindex) => {\n  \n    this.setState({\n      questions: this.state.questions.filter((item, index) => index !== Removeindex),\n    });\n  };\n  addRule = (value) => {\n    this.setState({\n      rules: [...this.state.rules, { value }],\n    });\n  };\n\n\n  openNotification = () => {\n    const args = {\n      message: \"Test Created\",\n      description: \"Congratulations, Your Test created successfully.\",\n      duration: 3,\n    };\n    notification.open(args);\n  };\n\n  addQuestion = ({\n    questionDescripiton,\n    opiton1,\n    opiton2,\n    opiton3,\n    opiton4,\n    answer,\n  }) => {\n    this.setState({\n      questions: [\n        ...this.state.questions,\n        { questionDescripiton, opiton1, opiton2, opiton3, opiton4, answer },\n      ],\n    });\n  };\n\n  componentDidUpdate(){\n    if (this.props.testCreated) {\n      this.props.testCreatedFalse()\n      this.openNotification();\n    }\n  }\n\n  render() {\n    const { Option } = Select;\n\n    return (\n      <>\n        <Row justify=\"center\" align=\"middle\">\n          <Col xs={22} sm={22} md={10} lg={10} className=\"signup__container\">\n            <p className=\"sub-title__signup\"> 🎓 Create Test</p>\n            <Form\n              name=\"basic\"\n              className=\"create__test__form\"\n              initialValues={{\n                remember: true,\n              }}\n              onFinish={this.submitForm}\n              onFinishFailed={this.onFinishFailed}\n            >\n              <div className=\"element__wrapper\">\n                <Form.Item\n                  name=\"testName\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please Enter Test Name!\",\n                    },\n                  ]}\n                >\n                  <Input placeholder=\"Test Name\" className=\"input\" />\n                </Form.Item>\n                <Form.Item\n                  name=\"outOfMarks\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please enter total marks!\",\n                    },\n                  ]}\n                >\n                  <Input\n                    placeholder=\"Total Marks\"\n                    className=\"input\"\n                    type=\"number\"\n                  />\n                </Form.Item>\n              </div>\n              <Form.Item\n                name=\"category\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please enter a category\",\n                  },\n                ]}\n              >\n                <Input placeholder=\"Catergory of Test\" className=\"input\" />\n              </Form.Item>\n              <Form.Item\n                name=\"minutes\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please enter total duration of test\",\n                  },\n                ]}\n              >\n                <Input\n                  placeholder=\"Duration of test ( in Minutes )\"\n                  className=\"input\"\n                  type=\"number\"\n                />\n              </Form.Item>\n\n              <div className=\"element__wrapper\">\n                <Form.Item\n                  name=\"section\"\n                  rules={[\n                    { required: true, message: \"Please input your section!\" },\n                  ]}\n                >\n                  <Select defaultValue=\"Section\">\n                    <Option value=\"A\">Batch-1</Option>\n                    <Option value=\"B\">Batch-2</Option>\n                    <Option value=\"C\">Batch-3</Option>\n                    <Option value=\"D\">Batch-4</Option>\n                  </Select>\n                </Form.Item>\n\n                <Form.Item\n                  name=\"className\"\n                  rules={[{ required: true, message: \"Please select a class\" }]}\n                >\n                  <Select defaultValue=\"Class\">\n                    <Option value=\"IX\">Intermediate</Option>\n                    <Option value=\"IX\">Diplamo</Option>\n                    <Option value=\"IX\">B.tech</Option>\n                    <Option value=\"IX\">IX</Option>\n                    {/* <Option value=\"XI\">XI</Option>\n                    <Option value=\"XII\">XII</Option> */}\n                  </Select>\n                </Form.Item>\n              </div>\n              <p className=\"primary-wihtoutFont\" style={{ fontWeight: \"500\" }}>\n                {\" \"}\n                Test Rules\n              </p>\n              <RenderData\n                ruleData={this.state.rules}\n                rules={true}\n                clickedRule={this.handleDeleteRule}\n              />\n              <Form.Item>\n                <Rules addRule={this.addRule} />\n              </Form.Item>\n              <p className=\"primary-wihtoutFont\" style={{ fontWeight: \"500\" }}>\n                {\" \"}\n                Test Questions\n              </p>\n              <RenderData\n                questionData={this.state.questions}\n                questions={true}\n                clickedRule={this.handleDeleteQuestion}\n              />\n              <Form.Item>\n                <Questions addQuestion={this.addQuestion} />\n              </Form.Item>\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  loading={this.state.isLoading}\n                  className=\"sign__up\"\n                  htmlType=\"submit\"\n                  disabled={(this.state.questions.length<1)?(true):(false)}\n                >\n                  {this.state.isLoading ? \"Creating Test\" : \"Create Test\"}\n                </Button>\n              </Form.Item>\n            </Form>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    teacherID: state.auth.profileID,\n    isLoading: state.teacher.isLoadingTest,\n    testCreated: state.teacher.testCreated,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    submitTest: (values) => dispatch(submitTest(values)),\n    testCreatedFalse: () => dispatch(testCreatedFalse()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTest);\n","import React, { useState, useEffect } from \"react\";\nimport { Input } from \"antd\";\nconst { Search } = Input;\nexport default function SearchBox(props) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    props.handleListData(searchTerm.toLowerCase());\n  }, [searchTerm]);\n\n  const handleSearchChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n  const onSearch = (value) => {\n    console.log(value);\n  };\n\n  return (\n    <>\n      <div className=\"search__input\">\n        <Search\n          placeholder=\"input search text\"\n          onSearch={onSearch}\n          onChange={handleSearchChange}\n          enterButton\n        />\n      </div>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Button } from \"antd\";\nimport SearchBox from \"./SearchBox\";\nimport { useHistory } from \"react-router-dom\";\nimport { Skeleton } from \"antd\";\n\nexport default function TestList(props) {\n  const history = useHistory();\n  const [tests, setTests] = useState([]);\n  const [searchTests, setSearchTests] = useState([]);\n  const [searching, setSearching] = useState(\"\");\n\n  useEffect(() => {\n    setTests(props.tests.reverse());\n  }, [props]);\n\n  const handleListData = (searchTerm) => {\n    if (searchTerm === \"\") setSearching(searchTerm);\n    else {\n      setSearching(true);\n      setSearchTests(\n        tests.filter((test) => test.testName.toLowerCase().includes(searchTerm))\n      );\n    }\n  };\n\n  let selectRef,\n    selectedData = {};\n\n  const handleButtonClick = () => {\n    props.handleSelectedTest(selectedData);\n    history.push(\n      `/test-status/${selectedData.testName\n        ?.replace(/\\s+/g, \"-\")\n        .toLowerCase()}`\n    );\n  };\n\n  const handleSelectTest = (e, index) => {\n    if (selectRef) {\n      selectRef.classList.remove(\"selected__test\");\n    }\n    selectRef = e.currentTarget;\n    e.currentTarget.classList.add(\"selected__test\");\n    selectedData = tests[index];\n    console.log(selectedData);\n    //console.log();\n  };\n\n  return (\n    <>\n      <div className=\"select__test__wrapper\">\n        <p className=\"test__wrapper__heading\">Assigned Test</p>\n        <div className=\"select__test__search__box\">\n          <p className=\"search__box__heading\">Search Test</p>\n          {<SearchBox handleListData={handleListData} />}\n          <div className=\"test__wrapper__body\">\n            <p className=\"test__wrapper__heading select__heading\">\n              Select Test\n            </p>\n            <div className=\"select__test__body\">\n              {tests.length > 0 ? (\n                searching !== \"\" ? (\n                  searchTests.map((test, index) => (\n                    <div\n                      key={index}\n                      className={`test__wrapper`}\n                      onClick={(e) => {\n                        handleSelectTest(e, index);\n                      }}\n                    >\n                      <p className=\"select__test\" key={index}>\n                        {test.testName}\n                      </p>\n                      <div className=\"test__time\">\n                        <p className=\"time start\">\n                          Published On: Oct 26 2020 12:14PM\n                        </p>\n                        <p className=\"time end\">\n                          Attempted On: Oct 29 2020 11:50PM\n                        </p>\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  tests.map((test, index) => (\n                    <div\n                      key={index}\n                      className={`test__wrapper`}\n                      onClick={(e) => {\n                        handleSelectTest(e, index);\n                      }}\n                    >\n                      <p className=\"select__test\" key={index}>\n                        {test.testName}\n                      </p>\n                      <div className=\"test__time\">\n                        <p className=\"time start\">\n                          Published On: Oct 26 2020 12:14PM\n                        </p>\n                        <p className=\"time end\">\n                          Attempted On: Oct 29 2020 11:50PM\n                        </p>\n                      </div>\n                    </div>\n                  ))\n                )\n              ) : (\n                <div className=\"select__skeleton\">\n                  <div className=\"select__single-skeleton\">\n                    <Skeleton.Avatar\n                      className=\"select__avatar-skelton\"\n                      active={true}\n                      size=\"default\"\n                      shape=\"square\"\n                    />\n                    <Skeleton.Input\n                      className=\"select__input-skelton\"\n                      active={true}\n                      size=\"default\"\n                    />\n                  </div>\n                  <div className=\"select__single-skeleton\">\n                    <Skeleton.Avatar\n                      className=\"select__avatar-skelton\"\n                      active={true}\n                      size=\"default\"\n                      shape=\"square\"\n                    />\n                    <Skeleton.Input\n                      className=\"select__input-skelton\"\n                      active={true}\n                      size=\"default\"\n                    />\n                  </div>\n                  <div className=\"select__single-skeleton\">\n                    <Skeleton.Avatar\n                      className=\"select__avatar-skelton\"\n                      active={true}\n                      size=\"default\"\n                      shape=\"square\"\n                    />\n                    <Skeleton.Input\n                      className=\"select__input-skelton\"\n                      active={true}\n                      size=\"default\"\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"select__button\">\n          <Button type=\"primary\" onClick={handleButtonClick}>\n            Continue\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { fetchAssignedTests } from \"../../actions/TeacherActions\";\nimport { selectedAssignedTest } from \"../../actions/selectActions\";\nimport { connect } from \"react-redux\";\nimport \"./SelectTest.css\";\nimport TestList from \"./TestList\";\n\nfunction SelectTest(props) {\n  const { tests, profileID } = props;\n  console.log(props);\n\n  const handleSelectedTest = (testData) => {\n    props.selectedTest(testData);\n  };\n\n  useEffect(() => {\n    props.fetchTests(profileID);\n  }, []);\n\n  return (\n    <>\n      <div className=\"select__test__container\">\n        <TestList tests={tests} handleSelectedTest={handleSelectedTest} />\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    tests: state.teacher.assignedTests,\n    \n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchTests: (profileID) => dispatch(fetchAssignedTests(profileID)),\n    selectedTest: (testData) => dispatch(selectedAssignedTest(testData)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectTest);\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\nimport { connect } from \"react-redux\";\nimport SelectTest from \"./SelectTest\";\n\nfunction AssignedTestsWrapper(props) {\n  const { profileID } = props;\n  return (\n    <>\n      <div className=\"container dashboard\">\n        <Row gutter={[48, 10]} justify=\"center\">\n          <Col className=\"gutter-row\" xs={24} sm={24} md={14} xl={14}>\n            <SelectTest profileID={profileID} />\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    profileID: state.auth.user ? state.auth.profileID : null,\n  };\n};\n\nexport default connect(mapStateToProps, null)(AssignedTestsWrapper);\n","import React from \"react\";\nimport { Col } from \"antd\";\nimport \"./StudentStatus.css\";\n\nexport default function StudentStatus(props) {\n  const student = props.student;\n  const className = props.className;\n  const testName = props.testName;\n  return (\n    <>\n      <Col className=\"gutter-row gutter-col-adder\" sm={24} xs={24} md={6} lg={6}>\n        <div className=\"student__status__wrapper\">\n          <div className=\"status__header\">\n            <p className=\"status__header__heading\">\n              {student.firstName.toUpperCase()} {student.lastName.toUpperCase()}\n            </p>\n          </div>\n          <div className=\"student__status__body\">\n            <div className=\"status__test\">\n              Test Name: <span className=\"status__testname\"> {testName}</span>\n            </div>\n            <div className=\"status__test__total\">\n              Total Marks:{\" \"}\n              <span className=\"status__testname\">{student.totalMarks}</span>\n            </div>\n            <div className=\"status__test__obtained\">\n              Obtained Marks:{\" \"}\n              <span className=\"status__testname\">{student.correct}</span>\n            </div>\n            <div className=\"status__test__correct\">\n              Correct Answers:{\" \"}\n              <span className=\"status__testname success-wihtoutFont\">\n                {student.correct}\n              </span>\n            </div>\n            <div className=\"status__test__wrong\">\n              Wrong Answers:{\" \"}\n              <span className=\"status__testname danger\">{student.wrong}</span>\n            </div>\n            <div className=\"status__test__unanswered\">\n              Not Answered:{\" \"}\n              <span className=\"status__testname primary-wihtoutFont\">\n                {student.unanswered}\n              </span>\n            </div>\n          </div>\n        </div>\n      </Col>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\nimport { connect } from \"react-redux\";\nimport StudentStatus from \"./StudentStatus\";\n\nfunction TestStatus(props) {\n  console.log(props.selectedTest);\n  const style = { background: \"#0092ff\", padding: \"8px 0\" };\n  const students = props.selectedTest.submitBy;\n  const className = props.selectedTest.className;\n  const testName = props.selectedTest.testName;\n  return (\n    <>\n      <div className=\"container student__status\">\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n          {students.length > 0 &&\n            students.map((student, index) => (\n              <StudentStatus\n                className={className}\n                testName={testName}\n                student={student}\n                key={index}\n              />\n            ))}\n        </Row>\n      </div>\n    </>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    selectedTest: state.selectedTest.selectedAssignedTestData,\n  };\n};\n\nexport default connect(mapStateToProps, null)(TestStatus);\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Login from \"../logIn/Login\";\nimport Signup from \"../signUp/Signup\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ProtectedRoute from \"../protectedRoute/ProtectedRoute\";\nimport StudentDashboard from \"../dashboard/Dashboard\";\nimport TeacherDashboard from \"../Teacher/Dashboard/Dashboard\";\nimport AttemptTest from \"../attemptTest/AttemptTest\";\nimport Navbar from \"../navbar\";\nimport Result from \"../result/ResultWrapper\";\nimport TestInstruction from \"../TestInstructions/TestInstruction\";\nimport IndividualResult from \"../result/ShowResult\";\nimport TestPreviewWrapper from \"../testPreview/TestPreviewWrapper\";\nimport { connect } from \"react-redux\";\nimport { Modal } from \"antd\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport Profile from \"../profile/Profile\";\nimport { Roles } from \"../Roles/roles\";\nimport CreateTest from \"../Teacher/CreateTest/CreateTest\";\nimport AssignedTestsWrapper from \"../Teacher/AssigenedTest/AssignedTestsWrapper\";\nimport TestStatus from \"../Teacher/TestStatus/TestStatus\";\nimport { message } from \"antd\";\nimport { Offline, Online } from \"react-detect-offline\";\n\nfunction App(props) {\n  const [count, setCount] = useState(1);\n\n  const handleOffline = () => {\n    setCount(count + 1);\n    if (count % 2 == 0) {\n      message.success(\"Connected to internet\");\n    } else {\n      message.error(\"Please connect to internet\");\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"contextmenu\", (e) => {\n      e.preventDefault();\n    });\n    window.addEventListener(\"keydown\", (e) => {\n      console.log(e);\n      if (e.key == \"F12\") {\n        e.preventDefault();\n      }\n    });\n  }, []);\n\n  const { selectedTestName, selectedAssignedTestName } = props;\n  const role = props.userInfo.role;\n  const { confirm } = Modal;\n  const history = useHistory();\n\n  return (\n    <div className={count % 2 ? \"\" : \" pointer__select__none\"}>\n      <Offline onChange={(e) => handleOffline(e)}></Offline>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact={true} path={\"/signin\"} component={Login} />\n          <Route exact={true} path=\"/signup\" component={Signup} />\n          <ProtectedRoute\n            exact={true}\n            path=\"/\"\n            component={\n              Roles.teacher === role ? TeacherDashboard : StudentDashboard\n            }\n          />\n          <ProtectedRoute\n            exact={true}\n            path=\"/attempt-test\"\n            component={AttemptTest}\n          />\n          <ProtectedRoute\n            exact={true}\n            path=\"/create-test\"\n            component={Roles.teacher === role ? CreateTest : AttemptTest}\n          />\n          <ProtectedRoute exact={true} path=\"/result\" component={Result} />\n          <ProtectedRoute\n            exact={true}\n            path={`/result/${selectedTestName}`}\n            component={IndividualResult}\n          />\n          <ProtectedRoute\n            exact={true}\n            path=\"/test-instructions\"\n            component={TestInstruction}\n          />\n          <ProtectedRoute\n            exact={true}\n            path=\"/start-test\"\n            component={TestPreviewWrapper}\n          />\n          <ProtectedRoute exact={true} path=\"/profile\" component={Profile} />\n          <ProtectedRoute\n            exact={true}\n            path=\"/assigned-test\"\n            component={\n              Roles.teacher === role ? AssignedTestsWrapper : StudentDashboard\n            }\n          />\n          <ProtectedRoute\n            exact={true}\n            path={`/test-status/${selectedAssignedTestName}`}\n            component={TestStatus}\n          />\n          <ProtectedRoute component={Login} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedTestName: state.selectedTest.selectedTestResultData.testName\n      ?.replace(/\\s+/g, \"-\")\n      .toLowerCase(),\n    userInfo: state.auth.user,\n    selectedAssignedTestName: state.selectedTest.selectedAssignedTestData.testName\n      ?.replace(/\\s+/g, \"-\")\n      .toLowerCase(),\n  };\n};\n\nexport default connect(mapStateToProps, null)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  LOGIN_FAILURE,\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCCESS,\n  SIGN_UP_FAILURE,\n  LOGOUT_FAILURE,\n  LOGOUT_REQUEST,\n  LOGOUT_SUCCESS,\n  VERIFY_REQUEST,\n  VERIFY_SUCCESS,\n  SEND_PASS_RESET_SUCCESS,\n  SEND_PASS_RESET,\n  SEND_PASS_RESET_ERROR,\n  USER_ACCOUNT_CREATED,\n} from \"../actions/authActions\";\n// import storageListner from \"../storageListener/localStorageListener\";\n\nconst initialState = {\n  isLoggingIn: false,\n  isSigningUp: false,\n  isLoading: false,\n  isLoggingOut: false,\n  isVerifying: false,\n  loginError: false,\n  signupError: false,\n  logoutError: false,\n  accountCreated: false,\n  isAuthenticated: localStorage.getItem(\"token\") ? true : false,\n  sendPassResetSuccess: false,\n  sendPassResetError: false,\n  profileID: localStorage.getItem(\"profileID\"),\n  user: JSON.parse(localStorage.getItem(\"userProfile\"))\n    ? JSON.parse(localStorage.getItem(\"userProfile\"))\n    : {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      console.log(\"login request fired\");\n      return {\n        ...state,\n        isLoggingIn: true,\n        isLoading: true,\n        loginError: false,\n      };\n    case LOGIN_SUCCESS:\n      console.log(\"login success fired\", action.obj);\n      return {\n        ...state,\n        isLoggingIn: false,\n        isLoading: false,\n        isAuthenticated: true,\n        user: action.user,\n        profileID: action.profileID,\n      };\n    case LOGIN_FAILURE:\n      console.log(\"login failure fired\");\n      return {\n        ...state,\n        isLoggingIn: false,\n        isAuthenticated: false,\n        isLoading: false,\n        loginError: true,\n      };\n\n    case SIGN_UP_REQUEST:\n      return {\n        ...state,\n        isSigningUp: true,\n        isLoading: true,\n        signupError: false,\n      };\n\n    case SIGN_UP_SUCCESS:\n      return {\n        ...state,\n        isSigningUp: false,\n        isLoading: false,\n        signupError: false,\n        accountCreated: true,\n        // isAuthenticated: true,\n        // user: action.user,\n      };\n\n    case SIGN_UP_FAILURE:\n      return {\n        ...state,\n        isSigningUp: false,\n        isLoading: false,\n        signupError: action.errMess,\n      };\n\n    case USER_ACCOUNT_CREATED:\n      return {\n        ...state,\n        accountCreated: false,\n      };\n\n    case SEND_PASS_RESET:\n      return {\n        ...state,\n        isLoading: true,\n        sendPassResetSuccess: false,\n        sendPassResetError: false,\n      };\n\n    case SEND_PASS_RESET_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        sendPassResetSuccess: true,\n        sendPassResetError: false,\n      };\n\n    case SEND_PASS_RESET_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        sendPassResetSuccess: false,\n        sendPassResetError: action.errMess,\n      };\n\n    case LOGOUT_REQUEST:\n      return { ...state, isLoggingOut: true, logoutError: false };\n\n    case LOGOUT_SUCCESS:\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"userProfile\");\n      localStorage.removeItem(\"profileID\");\n      return {\n        ...state,\n        isLoggingOut: false,\n        isAuthenticated: false,\n        user: {},\n      };\n\n    case LOGOUT_FAILURE:\n      return { ...state, isLoggingOut: false, logoutError: true };\n\n    case VERIFY_REQUEST:\n      return { ...state, isVerifying: true, verifyingError: false };\n\n    case VERIFY_SUCCESS:\n      return { ...state, isVerifying: false };\n    default:\n      return state;\n  }\n}\n","import {\n  FETCH_TEST_REQUEST,\n  FETCH_TEST_SUCCESS,\n  FETCH_ATTEMPT_TEST_SUCCESS,\n  FETCH_TEST_FAILURE,\n  SUBMIT_TEST_FAILURE,\n  SUBMIT_TEST_SUCCESS,\n  FETCH_TEACHER_TEST_REQUEST,\n  FETCH_TEACHER_TEST_SUCCESS,\n  FETCH_TEACHER_TEST_FAILURE,\n} from \"../actions/testActions\";\n\nconst initialState = {\n  isFetching: false,\n  isLoadingTest: false,\n  isLoadingAttemptedTest: false,\n  fetchingError: false,\n  isFetched: false,\n  testSubmitted: false,\n  testSubmitError: false,\n  test: [],\n  attemptedTest: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_TEST_REQUEST:\n      return {\n        ...state,\n        isFetching: true,\n        isLoadingTest: true,\n        isLoadingAttemptedTest: true,\n        fetchingError: false,\n      };\n    case FETCH_TEST_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        isLoadingTest: false,\n        isFetched: true,\n        test: action.tests,\n      };\n    case FETCH_TEACHER_TEST_REQUEST:\n      return {\n        ...state,\n        isFetching: true,\n        isLoadingTest: true,\n        isLoadingAttemptedTest: true,\n        fetchingError: false,\n      };\n\n    case FETCH_TEACHER_TEST_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        isLoadingTest: false,\n        isFetched: true,\n        test: action.tests,\n      };\n\n    case FETCH_TEACHER_TEST_FAILURE:\n      return {\n        ...state,\n        isFetching: false,\n        isFetched: false,\n        isLoadingTest: false,\n        isLoadingAttemptedTest: false,\n        fetchError: true,\n      };\n\n    case FETCH_ATTEMPT_TEST_SUCCESS:\n      // console.log(action.tests)\n      return {\n        ...state,\n        isFetching: false,\n        isLoadingAttemptedTest: false,\n        attemptedTest: action.tests[0].attemptedTest,\n      };\n\n    case FETCH_TEST_FAILURE:\n      return {\n        ...state,\n        isFetching: false,\n        isFetched: false,\n        isLoadingTest: false,\n        isLoadingAttemptedTest: false,\n        fetchError: true,\n      };\n    case SUBMIT_TEST_SUCCESS:\n      localStorage.removeItem(action.testID);\n      return {\n        ...state,\n        testSubmitted: true,\n        testSubmitError: false,\n      };\n    case SUBMIT_TEST_FAILURE:\n      return {\n        ...state,\n        testSubmitted: false,\n        testSubmitError: true,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  TEST_SELECTED,\n  SELECTED_TEST_RESULT,\n  SELECTED_ASSIGNED_TEST,\n} from \"../actions/selectActions\";\n\nconst initialState = {\n  selectedTestData: {},\n  selectedTestResultData: {},\n  selectedAssignedTestData: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case TEST_SELECTED:\n      // console.log(\"login success fired\", action.obj)\n      return {\n        ...state,\n        selectedTestData: action.testData,\n      };\n\n    case SELECTED_TEST_RESULT:\n      // console.log(\"login success fired\", action.obj)\n      return {\n        ...state,\n        selectedTestResultData: action.testData,\n      };\n    case SELECTED_ASSIGNED_TEST:\n      // console.log(\"login success fired\", action.obj)\n      return {\n        ...state,\n        selectedAssignedTestData: action.testData,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  UPDATE_ATTEMPT_TEST_REQUEST,\n  UPDATE_ATTEMPT_TEST_SUCCESS,\n  UPDATE_ATTEMPT_TEST_FAILURE,\n} from \"../actions/attemptTestActions\";\n\nconst initialState = {\n  attemptedTime: 0,\n  isFetching: false,\n  isFetched: false,\n  isFetchingError: false,\n  initializeTimer: false,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_ATTEMPT_TEST_REQUEST:\n      // console.log(\"login success fired\", action.obj)\n      return {\n        ...state,\n        isFetching: true,\n      };\n\n    case UPDATE_ATTEMPT_TEST_SUCCESS:\n      // console.log(\"login success fired\", action.obj)\n      //console.log(action.data);\n      const checker = state.initializeTimer;\n      return {\n        ...state,\n        isFetched: true,\n        isFetching: false,\n        attemptedTime: action.time,\n        initializeTimer: true,\n      };\n    case UPDATE_ATTEMPT_TEST_FAILURE:\n      // console.log(\"login success fired\", action.obj)\n      return {\n        ...state,\n        isFetching: false,\n        isFetched: false,\n        isFetchingError: true,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  FETCH_CLASSES_REQUEST,\n  FETCH_CLASSES_SUCCESS,\n  FETCH_CLASSES_FAILURE,\n} from \"../actions/classesActions\";\n\nconst initialState = {\n  isLoading: false,\n  isFetched: false,\n  isFetchError: false,\n  classes: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_CLASSES_REQUEST:\n      // console.log(\"login success fired\", action.obj)\n      return {\n        ...state,\n        isLoading: true,\n      };\n\n    case FETCH_CLASSES_SUCCESS:\n      // console.log(\"login success fired\", action.obj)\n      return {\n        ...state,\n        isLoading: false,\n        isFetched: true,\n        classes: action.data,\n      };\n\n    case FETCH_CLASSES_FAILURE:\n      // console.log(\"login success fired\", action.obj)\n      return {\n        ...state,\n        isfetched: false,\n        isLoading: true,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  SUBMIT_TEST_REQUEST,\n  SUBMIT_TEST_SUCCESS,\n  SUBMIT_TEST_FAILURE,\n  ASSIGNED_TEST_REQUEST,\n  ASSIGNED_TEST_FAILURE,\n  ASSIGNED_TEST_SUCCESS,\n  SET_TEST_CREATED_FALSE,\n} from \"../actions/TeacherActions\";\n\nconst initialState = {\n  isFetching: false,\n  isLoadingTest: false,\n  fetchingError: false,\n  isFetched: false,\n  testCreated: false,\n  testSubmitted: false,\n  testSubmitError: false,\n  assignedTests: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SUBMIT_TEST_REQUEST:\n      return {\n        ...state,\n        isFetching: true,\n        isLoadingTest: true,\n        fetchingError: false,\n      };\n    case SUBMIT_TEST_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        testCreated: true,\n        isLoadingTest: false,\n        isFetched: true,\n      };\n    case SUBMIT_TEST_FAILURE:\n      return {\n        ...state,\n        isFetching: true,\n        isLoadingTest: true,\n        fetchingError: false,\n      };\n    case ASSIGNED_TEST_REQUEST:\n      return {\n        ...state,\n        isFetching: true,\n        isLoadingTest: true,\n        fetchingError: false,\n      };\n    case ASSIGNED_TEST_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        testCreated: true,\n        isLoadingTest: false,\n        isFetched: true,\n        assignedTests: action.tests,\n      };\n    case ASSIGNED_TEST_FAILURE:\n      return {\n        ...state,\n        isFetching: true,\n        isLoadingTest: true,\n        fetchingError: false,\n      };\n    case SET_TEST_CREATED_FALSE:\n      return {\n        ...state,\n        testCreated: false,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport testReducer from \"./testReducer\";\nimport selectTestReducer from \"./selectReducer\";\nimport attemptedTestReducer from \"./attemptedTestReducer\";\nimport classesReducer from \"./classesReducer\";\nimport TeacherReducer from \"./teacherReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  tests: testReducer,\n  selectedTest: selectTestReducer,\n  userAttemptedTime: attemptedTestReducer,\n  classesData: classesReducer,\n  teacher: TeacherReducer,\n});\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"../reducers/index\";\nimport logger from \"redux-logger\";\n\n// const allEnhancers = compose(applyMiddleware(thunk, logger));\nconst allEnhancers = compose(applyMiddleware(thunk));\n\nconst store = createStore(reducer, allEnhancers);\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}